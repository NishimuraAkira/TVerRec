{
  "ja-JP": {
    "共通部品": "##########################################################################################",
    "LongBoldBorder": "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━",
    "MediumBoldBorder": "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━",
    "ShortBoldBorder": "━━━━━━━━━━━━━━━━━━━━━━━━━",
    "Loading": "読み込み中 ...",
    "VideoCountWhenZero": "　ダウンロード対象{0}本　　処理済{1}本",
    "VideoCountNonZero": "　💡 ダウンロード対象{0}本　　処理済{1}本",
    "共通エラーメッセージ": "##########################################################################################",
    "LoadSystemSettingFailed": "❌️ システム設定ファイルの読み込みに失敗しました",
    "SystemSettingNotFound": "❌️ システム設定ファイルが見つかりません",
    "LoadUserSettingFailed": "❌️ ユーザ設定ファイルの読み込みに失敗しました",
    "UserSettingNeedsToBeCreated": "💡 ユーザ設定ファイルを作成する必要があります",
    "LoadSettingGUIFailed": "❌️ 設定画面の起動に失敗しました",
    "UserSettingNotCompleted": "❌️ ユーザ設定が完了してません",
    "LoadCommonFuncFailed": "❌️ 外部関数ファイル(common_functions.ps1)の読み込みに失敗しました",
    "LoadTVerFuncFailed": "❌️ 外部関数ファイル(tver_functions.ps1)の読み込みに失敗しました",
    "LoadTVerRecFuncFailed": "❌️ 外部関数ファイル(tverrec_functions.ps1)の読み込みに失敗しました",
    "DevConfLoaded": "💡 開発用設定ファイルを読み込みました",
    "DevFuncLoaded": "💡 開発用共通関数ファイルを読み込みました",
    "LoadDevFilesFailed": "❌️ 開発用設定ファイルの読み込みに失敗しました",
    "UpdateUpdaterFailed": "⚠️ アップデータのアップデートに失敗しました。ご自身でアップデートを完了させる必要があります",
    "TVerRecVersionCheckFailed": "⚠️ TVerRecのバージョンチェックに失敗しました。処理を継続します",
    "YoutubeDLVersionCheckFailed": "⚠️ youtube-dlのバージョンチェックに失敗しました。処理を継続します",
    "FfmpegVersionCheckFailed": "⚠️ ffmpegのバージョンチェックに失敗しました。処理を継続します",
    "DownloadDirNotAccessible": "❌️ 番組ダウンロード先ディレクトリにアクセスできません。終了します",
    "FileCannotBeDeleted": "⚠️ 削除できないファイルがありました",
    "FileNotFound": "❌️ {0}が見つかりません",
    "Completed": "完了",
    "WaitingDownloadCompletion": "ダウンロードの終了を待機しています",
    "MinRemaining": "残り時間 {0}分",
    "CalculatingRemainingTime": "残り時間計算中",
    "SecWaiting": "{0}秒待機します",
    "SecWaitRemaining": "{0}{1} 残り{2}秒",
    "GuiBroken": "❌️ ウィンドウデザイン読み込めませんでした。TVerRecが破損しています",
    "WindowRenderError": "❌️ ウィンドウを描画できませんでした。TVerRecが破損しています",
    "DisclaimerForMultithread": "　並列処理をするため進捗状況は順不同で表示されます",
    "TVerRec関数": "##########################################################################################",
    "NotExist": "　❌️ {0}が存在しません。終了します",
    "NotExistContinue": "　⚠️ {0}が存在しませんが処理を継続します",
    "DownloadDir": "番組ダウンロード先ディレクトリ",
    "WorkDir": "ダウンロード作業ディレクトリ",
    "SaveDir": "番組移動先ディレクトリ",
    "KeywordFile": "ダウンロード対象キーワードファイル",
    "IgnoreFile": "ダウンロード対象外番組ファイル",
    "HistFile": "ダウンロード履歴ファイル",
    "ListFile": "ダウンロードリストファイル",
    "DirNotSpecified": "　❌️ {0}が設定されていません。終了します",
    "LoadFailed": "　❌️ {0}の読み込みに失敗しました",
    "UpdateFailed": "　❌️ {0}の読み込みに失敗しました",
    "WaitingLock": "　ファイルのロック解除待ち中です",
    "IgnoreFileSortCompleted": "　ダウンロード対象外リストのソート更新完了",
    "IgnoreFileSortFailed": "　⚠️ ダウンロード対象外リストのソートに失敗しました",
    "WaitingNumDownloadProc": "ダウンロードが{0}多重に達したので一時待機します",
    "NumDownloadProc": "{0} - 現在のダウンロードプロセス数 {1}個",
    "EpisodeInfoRetrievalFailed": "　⚠️ 番組情報を取得できませんでした。スキップします",
    "EpisodeTitleRetrievalFailed": "　⚠️ 番組タイトルを特定できませんでした。スキップします",
    "FileNameRetrievalFailed": "　⚠️ ファイル名が取得できませんでした。スキップします",
    "IgnoreEpisodeAdded": "　⚠️ ダウンロード対象外としたファイルをダウンロード履歴に追加します",
    "DownloadEpisodeIdChanged": "　💡 エピソードIDが変更になりました。ダウンロードするファイルをダウンロード履歴に追加します",
    "DownloadEpisodeAdded": "　💡 ダウンロードするファイルをダウンロード履歴に追加します",
    "DownloadHistExists": "　⚠️ 同名のファイルがすでに履歴ファイルに存在します。エピソードIDが変更になりました。ダウンロードをスキップします",
    "DownloadFileExists": "　⚠️ 履歴ファイルに存在しませんが番組ファイルが存在します。整合性検証の対象とします",
    "HistWritten": "ダウンロード履歴を書き込みました",
    "HistUpdateFailed": "　⚠️ ダウンロード履歴を更新できませんでした。スキップします",
    "CreateEpisodeDirFailed": "　⚠️ 番組ディレクトリを作成できませんでした。スキップします",
    "InvokeYtdlFailed": "　⚠️ youtube-dlの起動に失敗しました",
    "ListIgnoredAdded": "　⚠️ ダウンロード対象外としてコメントアウトした状態でリストファイルに追加します",
    "ListAdded": "　💡 番組をリストファイルに追加します",
    "ListWritten": "ダウンロードリストを書き込みました",
    "ListUpdateFailed": "　⚠️ ダウンロードリストを更新できませんでした。スキップします",
    "EpisodeName": "　番組名:　 {0}",
    "BroadcastDate": "　放送日:　 {0}",
    "MediaName": "　テレビ局: {0}",
    "EndDate": "　配信終了: {0}",
    "EpisodeDetail": "　番組説明: {0}",
    "ExecCommand": "{0}起動コマンド: {1}{2}",
    "ExecFailed": "　⚠️ {0}の起動に失敗しました",
    "GetDownloadProcNumFailed": "ダウンロードプロセスの数を取得できませんでした",
    "WaitSuspendTime": "{0} 現在は処理停止時間帯です",
    "OptimizeHistFailed": "　⚠️ ダウンロード履歴の不整合解消に失敗しました",
    "CleanupHistFailed": "　⚠️ ダウンロード履歴のクリーンアップに失敗しました",
    "DistinctHistFailed": "　⚠️ ダウンロード履歴の重複削除に失敗しました",
    "InitializeErrorFileFailed": "　⚠️ ffmpegエラーファイルを初期化できませんでした",
    "ValidationCompleted": "　💡 他プロセスでチェック済です",
    "ValidationInProgress": "　💡 他プロセスでチェック中です",
    "HistRecordRemoved": "　⚠️ 既にダウンロード履歴から削除されたようです: {0}",
    "ErrorCountFailed": "　⚠️ ffmpegエラーの数をカウントできませんでした",
    "DeleteErrorFailed": "　⚠️ ffmpegエラーファイルを削除できませんでした",
    "ValidationNG": "　⚠️ チェックNGでした",
    "ErrorCount": "　　終了コード: {0}　　エラー数: {1}",
    "DeleteVideoFailed": "　⚠️ ファイル削除できませんでした: {0}",
    "ValidationOK": "　✅ 整合性チェックOKです",
    "ツール更新": "##########################################################################################",
    "ToolLatestNotIdentified": "⚠️ {0}の最新バージョンを特定できませんでした",
    "ToolLatestNotRetrieved": "⚠️ {0}の最新バージョンの情報を取得できませんでした",
    "ToolUpdateLog": "{0}の更新内容",
    "ToolUpdateInstruction": "{0}をアップデートするにはこのウィンドウを閉じ {1} を実行してください",
    "ToolUpdateFailed": "　❌️ {0}の更新に失敗しました",
    "ToolUpToDate": "✅️ {0}は最新です",
    "ToolOutdated": "⚠️ {0}の最新版が利用可能です",
    "ToolLocalVersion": "　Local version: {0}",
    "ToolRemoteVersion": "　Remote Version: {0}",
    "ToolDownload": "{0}の最新版{1}用をダウンロードします",
    "ToolDownloadFailed": "❌️ {0}のダウンロードに失敗しました",
    "ToolExtract": "ダウンロードした{0}を解凍します",
    "ToolExtractFailed": "❌️ {0}の解凍に失敗しました",
    "ToolDeploy": "解凍した{0}を配置します",
    "ToolDeployFailed": "❌️ {0}の配置に失敗しました",
    "ToolRemoveWorkingFiles": "中間ディレクトリと中間ファイルを削除します",
    "ToolUpdated": "💡 {0}をversion {1}に更新しました",
    "ToolVersionCheckFailed": "❌️ 更新後のバージョン取得に失敗しました",
    "ToolArchitectureNotIdentified1": "⚠️ お使いの環境に適合する{0}を特定できませんでした",
    "ToolArchitectureNotIdentified2": "⚠️ {0}に適合する{1}をご自身で配置してください",
    "ToolInvalidSource": "❌️ {0}の取得元の指定が無効です",
    "TVer関連": "##########################################################################################",
    "TokenRetrievalFailed": "　❌️ トークン取得エラー、終了します",
    "InvalidTypeSpecified": "無効なタイプが指定されました",
    "HttpTimeout": "⚠️ HTTP接続がタイムアウトしました。スキップして次のリンクを処理します",
    "HttpBadResponse": "⚠️ HTTP接続が失敗しました。スキップして次のリンクを処理します - {0}",
    "HttpOtherError": "⚠️ エラーが発生しました。スキップして次のリンクを処理します - {0}",
    "UnknownContentsType": "⚠️ 未知のコンテンツタイプです - {0}/{1}",
    "UnknownComponentType": "⚠️ 未知のコンポーネントタイプです - {0}",
    "ExtractingEpisodes": "　{0} - {1} {2} からEpisodeを抽出中 ...",
    "DistinctIDs": "　{0} - {1} の重複を削除中 ...",
    "TopPageRetrievalFailed": "トップページを取得できませんでした",
    "SiteMapRetrievalFailed": "サイトマップを取得できませんでした",
    "VideoInfoRetrievalFailed": "⚠️ 番組情報を取得できません。スキップして次のリンクを処理します - {0}",
    "M3u8KeyRetrievalFailed": "⚠️ m3u8ファイル取得のキーが取得できません。スキップして次のリンクを処理します - {0}",
    "M3u8FileRetrievalFailed": "⚠️ m3u8ファイルが取得できません。スキップして次のリンクを処理します - {0}",
    "JpIPFound": "💡 日本のIPアドレスを割り当てました: {0}",
    "一括ダウンロード": "##########################################################################################",
    "BulkDownloading": "一括ダウンロード中",
    "ExtractingVideoFromKeywords": "キーワードから番組の抽出",
    "DownloadingVideo": "番組のダウンロード",
    "BulkDownloadCompleted": "一括ダウンロード処理を終了しました",
    "ExtractAndDownloadVideoFromKeywords": "キーワードから番組を抽出しダウンロード",
    "個別ダウンロード": "##########################################################################################",
    "KeywordForSingleDownload": "個別指定",
    "SingleDownloadFormTitle": "TVerRec個別ダウンロード",
    "SingleDownloadCompleted": "ダウンロード処理を終了しました",
    "SingleDownloadCUIMessage": "番組URLを入力してください。何も入力しないで Enter を押すと終了します。スペースで区切って複数入力可能です",
    "SingleDownloadGUIOkButton": "ダウンロード",
    "SingleDownloadGUIMessage": "番組URLを入力してください。改行で区切って複数入力可能です",
    "SingleDownloadTVerURL": "TVer URL",
    "SingleDownloadNonTVerURL": "TVer以外のURL",
    "SingleDownloadNotURL": "URLではありません",
    "リストダウンロード": "##########################################################################################",
    "KeywordForListDownload": "リスト指定",
    "DownloadListZero": "⚠️ ダウンロードリストが0件です",
    "ListDownloading": "リストからの番組のダウンロード中",
    "ExtractAndDownloadVideoFromLists": "リストファイルから番組をダウンロード",
    "ListDownloadCompleted": "リストダウンロード処理を終了しました",
    "リスト作成": "##########################################################################################",
    "ListCreation": "キーワードから番組リスト作成中",
    "ExtractAndCreateListFromKeywords": "キーワードから番組を抽出しリスト作成",
    "GenerateList": "番組リストの作成",
    "ListCreationCompleted": "番組リストファイル出力処理を終了しました",
    "ListCreationCompletionMessage1": "💡 必要に応じてリストファイルを編集してダウンロード不要な番組を削除してください",
    "ListCreationCompletionMessage2": "　リストファイルパス: {0}",
    "不要ファイル削除": "##########################################################################################",
    "DeleteTrashFiles": "処理が中断した際にできたゴミファイルを削除します",
    "DeleteExcludeFiles": "ダウンロード対象外の番組を削除します",
    "DisclaimerForForceDownloadFlag": "⚠️ - 強制ダウンロードフラグが設定されているためダウンロード対象外の番組の削除処理をスキップします",
    "DeleteTrashes": "不要ファイル削除中",
    "DeleteEmptyDirs": "空ディレクトリを削除します",
    "DeleteTrashesStep1": "　処理1/3 - ダウンロード中断時のゴミファイルを削除",
    "DeleteTrashesStep2": "　処理2/3 - ダウンロード対象外の番組を削除",
    "DeleteTrashesStep3": "　処理3/3 - 空ディレクトリを削除",
    "DeleteEmptyDirsFailed": "⚠️ - 空ディレクトリの削除に失敗しました: {0}",
    "DeleteTrash": "不要ファイル削除",
    "DeleteTrashCompleted": "不要ファイル削除処理を終了しました。",
    "整合性チェック": "##########################################################################################",
    "DeleteCorruptedRecords": "ダウンロード履歴の不整合レコードを削除します",
    "DeleteOldRecords": "古いダウンロード履歴を削除します",
    "CheckingIntegrity": "ダウンロードファイルの整合性検証中",
    "RemoveDuplicates": "ダウンロード履歴の重複レコードを削除します",
    "IntegrityCheck": "整合性検証が終わっていない番組を検証します",
    "DisclaimerForNotValidating": "⚠️ ダウンロードファイルの整合性検証が無効化されているので、検証せずに終了します",
    "AllValidated": "✅️ すべての番組を検証済です",
    "ClearValidationStatus": "ダウンロード履歴から検証が終わっていない番組のステータスを変更します",
    "IntegrityCheckStep1": "　処理1/5 - 破損レコードを削除",
    "IntegrityCheckStep2": "　処理2/5 - {0}日以上前のダウンロード履歴を削除",
    "IntegrityCheckStep3": "　処理3/5 - ダウンロード履歴の重複レコードを削除",
    "IntegrityCheckStep4": "　処理4/5 - ファイルを検証",
    "IntegrityCheckStep5": "　処理5/5 - 未検証のファイルのステータスを変更",
    "ValidateVideo": "ダウンロードファイルの整合性検証中",
    "IntegrityCheckCompleted": "番組整合性チェック処理を終了しました。",
    "NotifyFfmpegOptions1": "💡 ffmpegのデコードオプションが設定されてます",
    "NotifyFfmpegOptions2": "💡 もし整合性検証がうまく進まない場合は、以下のどちらかをお試しください",
    "NotifyFfmpegOptions3": "　・user_setting.ps1 でデコードオプションを変更する",
    "NotifyFfmpegOptions4": "　・user_setting.ps1 で $script:forceSoftwareDecodeFlag = $true と設定する",
    "番組移動": "##########################################################################################",
    "MoveVideos": "番組の移動中",
    "MoveVideosStep1": "　処理1/3 - ディレクトリ一覧を作成",
    "MoveVideosStep2": "　処理2/3 - ダウンロードファイルを移動",
    "MoveVideosStep3": "　処理3/3 - 空ディレクトリを削除",
    "ListUpDestinationDirs": "移動先ディレクトリの一覧を作成しています",
    "ListUpSourceDirs": "ダウンロードディレクトリの一覧を作成しています",
    "MatchingTargetAndSource": "移動先ディレクトリとダウンロードディレクトリの一致を抽出しています",
    "MovingVideos": "ダウンロードファイルを移動しています",
    "MoveFileFailed": "⚠️ 移動できないファイルがありました - {0}",
    "MoveFileNotAccessible": "⚠️ 移動元、または移動先にアクセスできなくなりました - {0}",
    "MoveVideo": "番組の移動",
    "MoveVideoCompleted": "番組移動処理を終了しました",
    "メインGUI": "##########################################################################################",
    "ProcessBulkDownload": "個別ダウンロード処理を実行中 ...",
    "ProcessSingleDownload": "一括ダウンロード処理を実行中 ...",
    "ProcessListGenerate": "リスト作成処理を実行中 ...",
    "ProcessListDownload": "リストダウンロード処理を実行中 ...",
    "ProcessDelete": "不要ファイル削除処理を実行中 ...",
    "ProcessValidate": "番組整合性検証処理を実行中 ...",
    "ProcessMove": "番組移動処理を実行中 ...",
    "ProcessLoop": "ループ処理を実行中 ...",
    "SaveDirNotSpecified": "保存ディレクトリが設定されていません",
    "ProcessForceStopped": "⚠️ 処理を強制停止しました",
    "ProcessCompleted": "💡 処理を終了しました",
    "GuiHeaderTool": "ツール起動",
    "GuiHeaderLink": "クイックリンク",
    "GuiHeaderLog": "実行ログ",
    "GuiButtonLoop": "🔃 ループ実行",
    "GuiButtonSingle": "🔽 個別ダウンロード",
    "GuiButtonBulk": "⏬️ 一括ダウンロード",
    "GuiButtonListGen": "📝 リスト更新",
    "GuiButtonList": "🎯 リストダウンロード",
    "GuiButtonDelete": "🚮 不要ファイル削除",
    "GuiButtonValidate": "✅ 番組整合性検証",
    "GuiButtonMove": "🔀 番組移動",
    "GuiButtonKillAll": "❌ 処理強制停止",
    "GuiButtonWorkOpen": "♻️ 作業ディレクトリ",
    "GuiButtonDownloadOpen": "📚 ダウンロードディレクトリ",
    "GuiButtonSaveOpen": "💾 保存ディレクトリ",
    "GuiButtonKeywordOpen": "🔎 キーワードファイル",
    "GuiButtonIgnoreOpen": "🚫 除外リスト",
    "GuiButtonListOpen": "📝 リストファイル",
    "GuiButtonClearLog": "🗑️ 実行ログクリア",
    "GuiButtonWiki": "📒 TVerRec Wiki",
    "GuiButtonSetting": "🛠️ 設定",
    "GuiButtonExit": "終了",
    "設定GUI": "##########################################################################################",
    "SettingTrue": "する",
    "SettingFalse": "しない",
    "SettingUndefined": "未設定",
    "SettingDefault": "デフォルト値",
    "AutoGenNotDetected": "⚠️ 自動生成の終了部分を特定できませんでした",
    "SelectDownloadDir": "ダウンロード先ディレクトリを選択してください",
    "SelectWorkDir": "作業ディレクトリを選択してください",
    "SelectSaveDir": "移動先ディレクトリを選択してください",
    "GuiHeaderBasicSetting": "基本的な設定",
    "GuiHeaderDownloadDir": "ダウンロード先ディレクトリ",
    "GuiTextDownloadDirText": "ダウンロード先とは、ダウンロードが終わった動画ファイルが配置される場所です。 \n例えば「C:\\Users\\yamada-taro\\Video」にダウンロードするのであれば「C:\\Users\\yamada-taro\\Video」と設定します。",
    "GuiHeaderWorkDir": "作業ディレクトリ",
    "GuiTextWorkDirText": "作業ディレクトリは、動画のダウンロード中に処理途中のファイルが配置される場所です。 \n例えば「C:\\Temp」にダウンロードするのであれば「C:\\Temp」と設定します。 \n多数のファイルが作成され読み書きが多発するので、SSDやRamDriveなどの高速なディスクを指定すると動作速度が向上します。",
    "GuiHeaderSaveDir": "移動先ディレクトリ",
    "GuiTextSaveDirText": "移動先とは、動画ファイルを最終的に整理するためのライブラリ等が配置されている場所です。 \n例えば「C:\\TverLibrary」を移動先にするのであれば「C:\\TverLibrary」と設定します。 \n番組移動機能使用しない場合は設定しなくてもOKです。複数のディレクトリを移動先として指定する場合には「V:;X:」のようにセミコロン区切りで複数指定可能です。ただし、複数のディレクトリに同名のディレクトリがある場合には、先に指定したディレクトリが優先されます。",
    "GuiHeaderAdvancedSetting": "高度な設定",
    "GuiTabOperation": "一般",
    "GuiHeaderEnableMultithread": "並列処理の有効化",
    "GuiTextEnableMultithreadText": "並列処理を有効化して処理を高速化するかを設定します。 \nただし、並列処理を有効化すると履歴ファイルやダウンロード対象外リストの破損リスクが高まる可能性が高くなります。現在のところ、並列処理を行うのはダウンロードリストの作成処理とダウンロード対象外番組の削除処理、空ディレクトリの削除処理です。",
    "GuiHeaderMultithreadNum": "並列処理の同時スレッド数",
    "GuiTextMultithreadNumText": "並列処理の際に同時に起動するスレッド数を指定します。 \n最近のPCであれば「50」くらいの値を設定しても十分に動作すると思いますが、あまり大きな数を指定すると逆に処理時間が長くなる可能性があります。",
    "GuiHeaderDisableToast": "トースト通知の無効化",
    "GuiTextDisableToastText": "トースト通知を無効化することが可能です。",
    "GuiHeaderMaxExecLogLines": "GUI版の最大ログ行数",
    "GuiTextMaxExecLogLinesText": "GUI版で実行ログの最大行数を制限することができます。 \n実行ログの行数が増えてくるとメモリ使用量の増大やレスポンスが低下する可能性が高いです。規定の設定では1000行に設定されています。「0」に設定することで無制限とすることができます。",
    "GuiHeaderHistRetentionPeriod": "ダウンロード履歴保持日数",
    "GuiTextHistRetentionPeriodText": "ダウンロード履歴を保持する日数を指定します。 \n保持期間を長くすると、同じ番組の再配信があった際に重複ダウンロードしなくて住む可能性が高くなりますが、処理時間が長くなる可能性があります。",
    "GuiHeaderLoopCycle": "ループ処理の間隔(秒)",
    "GuiTextLoopCycleText": "ループ処理の実行間隔を指定します。",
    "GuiHeaderDetailedProgress": "進捗情報メッセージの表示",
    "GuiTextDetailedProgressText": "キーワード配下の番組一覧取得における進捗情報を表示するかを設定します。 \n処理時間が長く動作停止しているのか処理中なのか判断がつかない場合には、進捗表示をすることで進捗状況をより詳細に出力します。",
    "GuiHeaderExtractDescTextToList": "ダウンロードリストファイルへの番組説明の出力",
    "GuiTextExtractDescTextToListText": "ダウンロードリストファイルに番組説明情報を出力するかを設定します。",
    "GuiHeaderListGenHistoryCheck": "ダウンロードリスト作成時のダウンロード履歴との突合",
    "GuiTextListGenHistoryCheckText": "ダウンロードリストファイル作成時にダウンロード履歴に含まれる番組を除外するかを設定します。 \n「する」の場合はダウンロード履歴に番組履歴がある際はリストファイルに出力しません。 \n「しない」の場合はダウンロード履歴に番組履歴があってもリストファイルに出力します。",
    "GuiHeaderCleanupDownloadBaseDir": "不要ファイル削除時にダウンロードディレクトリのチェック",
    "GuiTextCleanupDownloadBaseDirText": "不要ファイル削除時にダウンロードディレクトリもチェック対象にするかを設定します。 \n「する」の場合はダウンロードディレクトリにあるファイルも削除対象にします。 \n「しない」の場合はダウンロードディレクトリにあるファイルも削除対象にしません。",
    "GuiHeaderCleanupSaveBaseDir": "不要ファイル削除時に保存ディレクトリのチェック",
    "GuiTextCleanupSaveBaseDirText": "不要ファイル削除時に保存ディレクトリもチェック対象にするかを設定します。 \n「する」の場合は保存ディレクトリにあるファイルも削除対象にします。 \n「しない」の場合は保存ディレクトリにあるファイルも削除対象にしません。",
    "GuiHeaderUpdateChannel": "TVerRecのアップデートチャネル",
    "GuiTextUpdateChannelText": "TVerRecのアップデータを実行した際に、どのチャネルから最新版をダウンロードするのかを設定します。 \n規定では「release」が設定されており、リリース版の最新版をダウンロードします。(プレリリースは除きます) \n「prerelease」に設定すると、プレリリース版の最新版をダウンロードします。(リリース版のほうが新しくても常に一番新しいプレリリース板となるのでご注意ください) \n「master」に設定すると、masterブランチの最新版を取得します。リリース前の機能を先行取得できます。 \n「beta」に設定すると、betaブランチの最新版を取得します。より新しい機能をお試しいただけますが、ベータ版のため不具合を含んでいる可能性があります。 \n「dev」に設定すると、devブランチの最新版を取得します。開発中の最新機能をお試しいただけますが、安定動作しない可能性があるため特殊要件がなければおすすめしません。",
    "GuiTabMypage": "マイページ",
    "GuiHeaderMyPlatformUID": "マイページ処理用のPlatform UID",
    "GuiTextMyPlatformUIDText": "TVerIDを登録しない状態で、マイページに登録したお気に入りやあとでみる、続きから再生などをTVerRecでダウンロードするためのplatform_uidを指定します。 \nTVerIDを登録しないで利用する場合、これを指定しないとマイページ配下の番組はダウンロードできません。platform_uidはブラウザの開発者ツール、またはChrome拡張機能TVerRec Assistantを使って確認できます。詳細はWikiを参照してください。",
    "GuiHeaderMyPlatformToken": "マイページ処理用のPlatform Token",
    "GuiTextMyPlatformTokenText": "TVerIDを登録しない状態で、マイページに登録したお気に入りやあとでみる、続きから再生などをTVerRecでダウンロードするためのplatform_tokenを指定します。 \nTVerIDを登録しないで利用する場合、これを指定しないとマイページ配下の番組はダウンロードできません。platform_tokenはブラウザの開発者ツール、またはChrome拡張機能TVerRec Assistantを使って確認できます。詳細はWikiを参照してください。",
    "GuiHeaderMyMemberSID": "マイページ処理用のMember SID",
    "GuiTextMyMemberSIDText": "TVerIDを登録した状態で、マイページに登録したお気に入りやあとでみる、続きから再生などをTVerRecでダウンロードするためのmember_sidを指定します。 \nTVerIDを登録した状態でマイページに保存した番組をダウンロードするには、これを指定しないとダウンロードできません。member_sidはブラウザの開発者ツール、またはChrome拡張機能TVerRec Assistantを使って確認できます。詳細はWikiを参照してください。",
    "GuiTabDownload": "ダウンロード",
    "GuiHeaderParallelDownloadFileNum": "同時ダウンロードファイル数",
    "GuiTextParallelDownloadFileNumText": "同時に並行でダウンロードする番組の数を設定します。 \nここの数字を増やすことで同時ダウンロード数を増やすことはできますが、PCへの負荷が高まり逆にダウンロード効率が下がるのでご注意ください。",
    "GuiHeaderParallelDownloadNumPerFile": "番組あたりの同時ダウンロード数",
    "GuiTextParallelDownloadNumPerFileText": "それぞれの番組をダウンロードする際の並行ダウンロード数を設定します。 \nここの数字を増やすことで同時ダウンロード数を増やすことはできますが、PCへの負荷が高まり逆にダウンロード効率が下がるのでご注意ください。",
    "GuiHeaderRateLimit": "ダウンロード帯域制限",
    "GuiTextRateLimitText": "ネットワーク帯域を使い切らないようにダウンロード速度制限を設定することができます。 \n「0」を設定すると帯域制限を行いません。設定は1ファイルあたりの帯域となっており単位はMbpsです。つまり、10ファイルダウンロードすれば10倍の帯域を使います。あくまでも目安となっており、瞬間的には設定値を超えることがあります。",
    "GuiHeaderTimeoutSec": "HTTPアクセスのタイムアウト",
    "GuiTextTimeoutSecText": "各種 HTTP のアクセス時のタイムアウト値(秒)です。 \n設定した時間以内にHTTPの応答がなければエラーとして判断されます。",
    "GuiHeaderEmbedSubtitle": "番組ファイルへの字幕データの埋め込み",
    "GuiTextEmbedSubtitleText": "ダウンロードしたファイルに字幕データを埋め込むかを設定します。 \n字幕データが提供されていない番組も多くありますのでご注意ください。",
    "GuiHeaderEmbedMetatag": "番組ファイルへのメタタグの埋め込み",
    "GuiTextEmbedMetatagText": "ダウンロードしたファイルにメタタグを埋め込むかを設定します。",
    "GuiHeaderSortVideoBySeries": "番組ごとのディレクトリ配下にダウンロードファイルを保存",
    "GuiTextSortVideoBySeriesText": "番組ごとのディレクトリを作って番組をダウンロードするかを設定します。 \n「しない」の際の移動先は以下 \nダウンロード先/ \n　└番組シリーズ名 番組シーズン名 放送日 番組タイトル名.mp4 \n「する」の際の移動先は以下 \nダウンロード先/ \n　└番組シリーズ名 番組シーズン名/ \n　　└番組シリーズ名 番組シーズン名 放送日 番組タイトル名.mp4 \n※厳密にはファイル名は他のオプションによって決定されます",
    "GuiHeaderSortVideoByMedia": "放送局ごとのディレクトリ配下にダウンロードファイルを保存",
    "GuiTextSortVideoByMediaText": "放送局(テレビ局)ごとのディレクトリを作って番組をダウンロードするかを設定します。 \n「しない」の際の移動先は以下 \nダウンロード先/ \n　└番組シリーズ名 番組シーズン名/ \n　　└番組シリーズ名 番組シーズン名 放送日 番組タイトル名.mp4 \n「する」の際の移動先は以下 \nダウンロード先/ \n　└放送局/ \n　　└番組シリーズ名 番組シーズン名/ \n　　　└番組シリーズ名 番組シーズン名 放送日 番組タイトル名.mp4 \n※厳密にはファイル名は他のオプションによって決定されます",
    "GuiHeaderForceSingleDownload": "個別ダウンロード時の強制ダウンロード",
    "GuiTextForceSingleDownloadText": "個別ダウンロードの際に過去履歴やダウンロード対象外リストとの照合をせずに強制ダウンロードするかを設定します。 \nこの設定を有効にすると、不要ファイル削除処理時にダウンロード対象外リストとマッチするディレクトリの削除を行わなくなります。",
    "GuiHeaderSitemapParseEpisodeOnly": "サイトマップ処理時にエピソードのみ処理",
    "GuiTextSitemapParseEpisodeOnlyText": "キーワードファイルでサイトマップ指定をした際にエピソードのみを処理するかどうかを設定します。 \n現在のところ、エピソードだけの処理でもすべての番組動画が含まれているようなので、エピソードだけの処理でも全番組のダウンロードが可能なようです。処理時間が長くなりますが、エピソード以外も処理することでダウンロード対象番組が増える可能性があります。",
    "GuiHeaderDownloadWhenEpisodeIdChanged": "エピソードID変更時の再ダウンロード",
    "GuiTextDownloadWhenEpisodeIdChangedText": "エピソードIDが変更された際に再ダウンロードするかを設定します。 \n同一番組(保存ファイル名が同一ファイル名になる番組)でもエピソードIDが変更になることがあります。どのような場合にエピソードIDが変更されるのかはよくわかりませんが、字幕データの追加や配信内容が変更されている可能性があります。",
    "GuiHeaderVideoContainerFormat": "TVer番組ファイルの動画コンテナ形式",
    "GuiTextVideoContainerFormatText": "TVer番組ファイルの動画コンテナ形式を設定します。 \nデフォルトではmp4となっており、メタ情報や字幕、サムネイルなどの埋込はmp4形式のみで有効です。 \n主に音ズレ対策としてts形式を指定することもできますが、ts形式を使うことで音ズレがなくなるかどうかはよくわかりません。 \nts形式を指定した場合、メタ情報や字幕、サムネイルなどの埋め込みは利用できなくなります。 \n機能に制限が出るため、基本的には mp4 を指定することが推奨で、特段理由がなければtsを指定しない方が良いと思います。",
    "GuiTabVideoFile": "動画ファイル名",
    "GuiHeaderAddSeriesName": "ダウンロードファイル名に番組シリーズ名を付加",
    "GuiTextAddSeriesNameText": "ダウンロードファイル名に番組シリーズ名を付加するかを設定します。 \n「しない」の場合のファイル名は以下 \n番組シーズン名 放送日 Epエピソード番号 番組タイトル名.mp4 \n「する」の際のファイル名は以下 \n番組シリーズ名 番組シーズン名 放送日 Epエピソード番号 番組タイトル名.mp4 \n※厳密にはファイル名は他のオプションによって決定されます",
    "GuiHeaderAddSeasonName": "ダウンロードファイル名に番組シーズン名を付加",
    "GuiTextAddSeasonNameText": "ダウンロードファイル名に番組シーズン名を付加するかを設定します。 \n「しない」の場合のファイル名は以下 \n番組シリーズ名 放送日 Epエピソード番号 番組タイトル名.mp4 \n「する」の際のファイル名は以下 \n番組シリーズ名 番組シーズン名 放送日 Epエピソード番号 番組タイトル名.mp4 \n※厳密にはファイル名は他のオプションによって決定されます",
    "GuiHeaderAddBroadcastDate": "ダウンロードファイル名に番組放送日を付加",
    "GuiTextAddBroadcastDateText": "ダウンロードファイル名に番組放送日を付加するかを設定します。 \n「しない」の場合のファイル名は以下 \n番組シリーズ名 番組シーズン名 Epエピソード番号 番組タイトル名.mp4 \n「する」の際のファイル名は以下 \n番組シリーズ名 番組シーズン名 放送日 Epエピソード番号 番組タイトル名.mp4 \n※厳密にはファイル名は他のオプションによって決定されます",
    "GuiHeaderAddEpisodeNumber": "ダウンロードファイル名にエピソード番号を付加",
    "GuiTextAddEpisodeNumberText": "ダウンロードファイル名にエピソード番号を付加するかを設定します。 \nただし、番組によってはエピソード番号が固定になっている番組やエピソード番号が取得できない番組もありますのでご注意ください。 \n「しない」の場合のファイル名は以下 \n番組シリーズ名 番組シーズン名 放送日 番組タイトル名.mp4 \n「する」の際のファイル名は以下 \n番組シリーズ名 番組シーズン名 放送日 Epエピソード番号 番組タイトル名.mp4 \n※厳密にはファイル名は他のオプションによって決定されます",
    "GuiHeaderRemoveSpecialNote": "番組名に付くことがある不要なコメントを削除",
    "GuiTextRemoveSpecialNoteText": "番組名に付く《ドラマ特区》、《新シリーズ放送記念》、《ドラマ Paravi》、《〇〇出演 「〇〇」スタート記念》などの不要なコメント(補足情報?)を削除するかを設定します。 \n「しない」の場合はTVerで配信されているとおりに番組名を設定 \n「する」の場合は「《」と「》」で挟まれた部分を削除",
    "GuiHeaderYtdlNonTVerFileName": "Tverサイト以外のベース名設定",
    "GuiTextYtdlNonTVerFileNameText": "Tverサイト以外のベースファイル名を指定します。 \n規定では「%(webpage_url_domain)s - %(upload_date)s - %(title)s - [%(id)s].%(ext)s」が設定されています。 \n変更する場合は使用しているyoutube-dl(yt-dlp/ytdl-patched)に合わせてオプションを設定してください。",
    "GuiTabYtdlFfmpeg": "youtube-dl/ffmpeg",
    "GuiButtonFfmpegDecodeOptionClear": "クリア",
    "GuiButtonFfmpegDecodeOptionQSV": "Intel QSV",
    "GuiButtonFfmpegDecodeOptionD3D11": "Direct3D 11",
    "GuiButtonFfmpegDecodeOptionD3D9": "Direct3D 9",
    "GuiButtonFfmpegDecodeOptionCuda": "Cuda",
    "GuiButtonFfmpegDecodeOptionVTB": "VideoToolBox",
    "GuiButtonFfmpegDecodeOptionPi4": "Pi4 64bit",
    "GuiButtonFfmpegDecodeOptionPi3": "Pi3 32bit",
    "GuiButtonYtdlOptionClear": "クリア",
    "GuiButtonYtdlOption1080": "1080p以下",
    "GuiButtonYtdlOption720": "720p以下",
    "GuiButtonYtdlOption480": "480p以下",
    "GuiButtonYtdlOption360": "360p以下",
    "GuiHeaderWindowShowStyle": "youtube-dlとffmpegのウィンドウの表示方法",
    "GuiTextWindowShowStyleText": "youtube-dlとffmpegのウィンドウをどのように表示するかを設定します。 \n「Minimized」に設定することで最小化状態でウィンドウが作成されるようになり必要なときにだけ進捗確認をすることができます。 \n「Hidden」に設定すると非表示となります。 \n「Normal」に設定すると多数のウィンドウが表示され鬱陶しいのでおすすめしません。 \n「Maximized」に設定すると最大化した状態でウィンドウが表示されますが、通常利用では利用することはないと思います。",
    "GuiHeaderPreferredYoutubedl": "youtube-dlの取得元",
    "GuiTextPreferredYoutubedlText": "youtube-dlに起因する問題(例えばダウンロードできないなど)が起きた際には2種類のyoutube-dlを使い分けることが可能です。 \n「yt-dlp」を設定するとyt-dlp(https://github.com/yt-dlp/yt-dlp)から取得します。 \n「ytdl-patched」を設定するとytdl-patched(https://github.com/ytdl-patched/ytdl-patched)から取得します。",
    "GuiHeaderFfmpegDecodeOption": "ffmpegのデコードオプション",
    "GuiTextFfmpegDecodeOptionText": "直接ffmpegのオプションを記載することができます。 \nダウンロードファイルの整合性検証時にハードウェアアクセラレーションを有効化する際などに使用します。例えばIntel CPUを搭載した一般的なPCであれば、「-hwaccel qsv -c:v h264_qsv」を設定することで、CPU内蔵のアクセラレータを使ってCPU負荷を下げつつ高速に処理することが可能です。この設定はソフトウェアデコードの強制を有効に設定されていると無効化されます。",
    "GuiHeaderForceSoftwareDecodeFlag": "ソフトウェアデコードの強制",
    "GuiTextForceSoftwareDecodeFlagText": "ダウンロードファイルの整合性検証時にハードウェアアクセラレーションを使わなくすることができます。 \n高速なCPUが搭載されている場合はハードウェアアクセラレーションよりもCPUで処理したほうが処理が早いことがあります。概ね10世代以降のIntel Core CPUであれば、GPUを搭載していてもソフトウェアデコードの方が高速です。Apple Silicon搭載のMacでもソフトウェアデコードのほうが高速です。",
    "GuiHeaderSimplifiedValidation": "番組の整合性検証の高速化",
    "GuiTextSimplifiedValidationText": "番組検証を簡素化するかどうかを設定します。 \n簡素化した場合、ffmpegによる番組の完全検証ではなく、ffprobeによる簡易検証に切り替えます。番組1本あたり数秒で検証が完了しますが、検証精度は低いです。(おそらくメタデータの検査だけの模様)",
    "GuiHeaderDisableValidation": "番組の整合性検証の無効化",
    "GuiTextDisableValidationText": "番組検証を行わなくするかどうかを設定します。",
    "GuiHeaderDisableUpdateYoutubedl": "youtube-dlの自動アップデートを無効化",
    "GuiTextDisableUpdateYoutubedlText": "youtube-dlの配布元の不具合等により自動アップデートがうまく動作しない場合には無効化することが可能です。",
    "GuiHeaderDisableUpdateFfmpeg": "ffmpegの自動アップデートを無効化",
    "GuiTextDisableUpdateFfmpegText": "ffmpegの配布元の不具合等により自動アップデートがうまく動作しない場合には無効化することが可能です。",
    "GuiHeaderYtdlOption": "youtube-dlオプション",
    "GuiTextYtdlOptionText": "直接youtube-dlのオプションを記載することができます。 \n動画の解像度を指定する場合などに使用します。 \n例えば、1080pを上限としたい場合、「-f bestvideo[height&lt;=1080]+bestaudio/best[height&lt;=1080]」と設定することで、高さが1080以下の動画を取得するように制限することが可能です。同様に、720pや480p、360pなども設定できます。 \nその他のyoutube-dlのオプションも設定可能です。使用しているyoutube-dl(yt-dlp/ytdl-patched)に合わせてオプションを設定してください。 \nここで設定した内容はTVer以外のサイトにも適用されます。",
    "GuiHeaderYtdlRandomIp": "ダウンロード時にのランダムIPアドレス使用",
    "GuiTextYtdlRandomIpText": "youtube-dlはデフォルトで固定の日本のIPアドレスを使用しますが、動画のダウンロード時にTVerRecが生成したランダムの日本のIPアドレスを使用することができます。 \nIPアドレスによるBANの可能性を低減できるかもしれません。 \nここで設定した内容はTVer以外のサイトにも適用されます。 \n「$true」の場合は起動ごとに生成されるランダムIPアドレスを使用します。 \n「$false」の場合はyoutube-dlのデフォルト機能を使用します。",
    "GuiHeaderYtdlHttpHeader": "youtube-dlのHTTPヘッダ",
    "GuiTextYtdlHttpHeaderText": "youtube-dlがHTTPアクセスをする際に追加のHTTPヘッダを指定することができます。",
    "GuiHeaderYtdlBaseArgs": "TVerサイト用youtube-dlの引数",
    "GuiTextYtdlBaseArgsText": "TVerサイトからのダウンロード設定です。TVerRecはsystem_setting.ps1に記載の設定が入っていることを前提としているので変更は自己責任でお願いします。",
    "GuiHeaderNonTVerYtdlBaseArgs": "Tverサイト以外youtube-dlの引数",
    "GuiTextNonTVerYtdlBaseArgsText": "TVerサイト以外からのダウンロード設定です。TVerRecはsystem_setting.ps1に記載の設定が入っていることを前提としているので変更は自己責任でお願いします。",
    "GuiTabSchedule": "スケジュール",
    "GuiHeaderScheduleStop": "スケジュールベースの動作停止設定",
    "GuiTextScheduleStopText": "特定の曜日・時間帯にダウンロード等の処理を停止したい場合に曜日ごとの停止時間帯を指定します。（1時間ごと） \nTVerRecは定期的に停止時間かどうかをチェックし、停止時間では処理を一時停止して待機します。停止時間外になると処理を再開します。仕組み上、処理の停止や再開は厳密には制御できませんので設定されたっ時間は目安としてしてください。",
    "GuiTextScheduleSpecifyText": "動作を停止したい曜日・時間帯のチェックボックスをオンにしてください。",
    "GuiTextScheduleStopTime": "時間帯",
    "GuiTextScheduleStopWeek": "毎日",
    "GuiTextScheduleStopMon": "月曜",
    "GuiTextScheduleStopTue": "火曜",
    "GuiTextScheduleStopWed": "水曜",
    "GuiTextScheduleStopThu": "木曜",
    "GuiTextScheduleStopFri": "金曜",
    "GuiTextScheduleStopSat": "土曜",
    "GuiTextScheduleStopSun": "日曜",
    "GuiTextScheduleStopDay": "終日",
    "GuiTabLanguage": "言語 / Language",
    "GuiHeaderPreferredLanguageHeader": "TVerRecの言語設定 / Language Setting",
    "GuiTextPreferredLanguageText": "TVerRecはOSの言語設定に基づき自動的に言語を切り替えますが、自動設定がうまくいかない場合は言語設定を強制できます。\nTVerRec will automatically switch languages based on the OS language settings, but you can force overwrite language settings if the automatic settings do not work.",
    "GuiButtonCancel": "❌ キャンセル",
    "GuiButtonSave": "💾 保存",
    "おわり": "##########################################################################################"
  },
  "en-US": {
    "Common components": "##########################################################################################",
    "LongBoldBorder": "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━",
    "MediumBoldBorder": "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━",
    "ShortBoldBorder": "━━━━━━━━━━━━━━━━━━━━━━━━━",
    "Loading": "Loading ...",
    "VideoCountWhenZero": "　To be downloaded: {0}　　Processed: {1}",
    "VideoCountNonZero": "　💡 To be downloaded: {0}　　Processed: {1}",
    "Common messages": "##########################################################################################",
    "LoadSystemSettingFailed": "❌️ Failed to load system configuration file",
    "SystemSettingNotFound": "❌️ System configuration file not found",
    "LoadUserSettingFailed": "❌️ Failed to read user configuration file",
    "UserSettingNeedsToBeCreated": "💡 User configuration file must be created",
    "LoadSettingGUIFailed": "❌️ Failed to launch configuration screen",
    "UserSettingNotCompleted": "❌️ User configuration is not completed",
    "LoadCommonFuncFailed": "❌️ Failed to load external function file (common_functions.ps1)",
    "LoadTVerFuncFailed": "❌️ Failed to load external function file (tver_functions.ps1)",
    "LoadTVerRecFuncFailed": "❌️ Failed to load external function file (tverrec_functions.ps1)",
    "DevConfLoaded": "💡 Loaded development configuration file",
    "DevFuncLoaded": "💡 Loaded development function file",
    "LoadDevFilesFailed": "❌️ Failed to load development configuration file",
    "UpdateUpdaterFailed": "⚠️ Failed to update updater. You will need to complete the update yourself",
    "TVerRecVersionCheckFailed": "⚠️ Failed to check the version of TVerRec. Processing will continue",
    "YoutubeDLVersionCheckFailed": "⚠️ Failed to check the version of youtube-dl. Processing will continue",
    "FfmpegVersionCheckFailed": "⚠️ Failed to check the version of ffmpeg. Processing will continue",
    "DownloadDirNotAccessible": "❌️ Failed to access video download directory. Terminating process",
    "FileCannotBeDeleted": "⚠️ There were files that could not be deleted",
    "FileNotFound": "❌️ {0} not found",
    "Completed": "Completed",
    "WaitingDownloadCompletion": "Waiting for download to be completed",
    "MinRemaining": "{0} mins remaining",
    "CalculatingRemainingTime": "Calculating remaining time",
    "SecWaiting": "Wait for {0} secs",
    "SecWaitRemaining": "{0}{1} {2} secs remaining",
    "GuiBroken": "❌️ Failed to load the window design, TVerRec is corrupted",
    "WindowRenderError": "❌️ Failed to render the window, TVerRec is corrupted",
    "DisclaimerForMultithread": "　Progress will be displayed in no particular order due to parallel processing",
    "TVerRec functions": "##########################################################################################",
    "NotExist": "　❌️ {0} does not exist. Terminate processing",
    "NotExistContinue": "　⚠️ {0} does not exist, but continue processing",
    "DownloadDir": "Download directory",
    "WorkDir": "Work directory",
    "SaveDir": "Save directory",
    "KeywordFile": "Keywords list",
    "IgnoreFile": "Exclusion list",
    "HistFile": "Download history",
    "ListFile": "Download list",
    "DirNotSpecified": "　❌️ {0} is not set. Terminate processing",
    "LoadFailed": "　❌️ Failed to load {0}",
    "WaitingLock": "　Waiting for file to be unlocked",
    "IgnoreFileSortCompleted": "　Completed sorting exclusion list",
    "IgnoreFileSortFailed": "　⚠️ Failed to sort exclusion list",
    "WaitingNumDownloadProc": "Pausing as downloads have reached {0} multiples",
    "NumDownloadProc": "{0} - Number of current download processes {1}",
    "EpisodeInfoRetrievalFailed": "　⚠️ Could not retrieve episode information. Skip downloading",
    "EpisodeTitleRetrievalFailed": "　⚠️ Failed to retrieve episode name. Skip downloading",
    "FileNameRetrievalFailed": "　⚠️ Failed to retrieve file name. Skip downloading",
    "IgnoreEpisodeAdded": "　⚠️ Excluded episode will be added to history file",
    "DownloadEpisodeIdChanged": "　💡 Episode ID has been changed. Record will be added to history file",
    "DownloadEpisodeAdded": "　💡 Record will be added to history file",
    "DownloadHistExists": "　⚠️ File with the same name already exists in history file. Episode ID has been changed. Skip downloading",
    "DownloadFileExists": "　⚠️ File with the same name already exists, although it does not exist in history file. Subject to validity check",
    "HistWritten": "History file written",
    "HistUpdateFailed": "　⚠️ History file could not be updated. Skip downloading",
    "CreateEpisodeDirFailed": "　⚠️ Could not create episode directory. downloading",
    "InvokeYtdlFailed": "　⚠️ Failed to launch youtube-dl",
    "ListIgnoredAdded": "　⚠️ Record will be added to list file with commented out as not eligible for download",
    "ListAdded": "　💡 Episode will be added to list file",
    "ListWritten": "Download list file written",
    "ListUpdateFailed": "　⚠️ Download list file could not be updated. Skip downloading",
    "EpisodeName": "　Episode: {0}",
    "BroadcastDate": "　Date:    {0}",
    "MediaName": "　Media:   {0}",
    "EndDate": "　End at:  {0}",
    "EpisodeDetail": "　Detail:  {0}",
    "ExecCommand": "{0} launch command: {1}{2}",
    "ExecFailed": "　⚠️ Failed to launch {0}",
    "GetDownloadProcNumFailed": "Failed to get number of download processes",
    "WaitSuspendTime": "{0} Currently, the processing is scheduled to suspend",
    "OptimizeHistFailed": "　⚠️ Failed to resolve inconsistency of download history",
    "CleanupHistFailed": "　⚠️ Failed to cleanup download history",
    "DistinctHistFailed": "　⚠️ Failed to delete duplicate download history",
    "InitializeErrorFileFailed": "　⚠️ Failed to initialize ffmpeg error file",
    "ValidationCompleted": "　💡 Already validated by another process",
    "ValidationInProgress": "　💡 Validation in progress by another process",
    "HistRecordRemoved": "　⚠️ Looks like it's already been removed from download history: {0}",
    "ErrorCountFailed": "　⚠️ Failed to count the number of ffmpeg errors",
    "DeleteErrorFailed": "　⚠️ Failed to delete ffmpeg error file",
    "ValidationNG": "　⚠️ Validation Failed",
    "ErrorCount": "　　exit code: {0}　　number of errors: {1}",
    "DeleteVideoFailed": "　⚠️ Failed to delete file: {0}",
    "ValidationOK": "　✅ Validation completed successfully",
    "Tool Update": "##########################################################################################",
    "ToolLatestNotIdentified": "⚠️ Could not identify the latest version of {0}",
    "ToolLatestNotRetrieved": "⚠️ Failed to retrieve information on the latest version of {0}",
    "ToolUpdateLog": "Updates of {0}",
    "ToolUpdateInstruction": "Close this window and run {1} to update {0}",
    "ToolUpdateFailed": "　❌️ Failed to update {0}",
    "ToolUpToDate": "✅️ {0} is up to date",
    "ToolOutdated": "⚠️ {0} is out of date and can be updated",
    "ToolLocalVersion": "　Local version:  {0}",
    "ToolRemoteVersion": "　Remote Version: {0}",
    "ToolDownload": "Download the latest version of {0} for {1}",
    "ToolDownloadFailed": "❌️ Failed to download {0}",
    "ToolExtract": "Extract downloaded {0}",
    "ToolExtractFailed": "❌️ Failed to extract {0}",
    "ToolDeploy": "Deploy extracted {0}",
    "ToolDeployFailed": "❌️ Failed to deploy {0}",
    "ToolRemoveWorkingFiles": "Delete intermediate directories and files",
    "ToolUpdated": "💡 {0} updated to version {1}",
    "ToolVersionCheckFailed": "❌️ Failed to obtain updated version",
    "ToolArchitectureNotIdentified1": "⚠️ Unable to identify the {0} that matches your environment",
    "ToolArchitectureNotIdentified2": "⚠️ Place the correct {0} for your {0} by yourself!",
    "ToolInvalidSource": "❌️ Invalid source specification for {0}",
    "TVer Related": "##########################################################################################",
    "TokenRetrievalFailed": "　❌️ Token retrieval error. Terminate processing",
    "InvalidTypeSpecified": "Invalid type specified",
    "HttpTimeout": "⚠️ HTTP connection timed out. Skip and process the next link",
    "HttpBadResponse": "⚠️ HTTP connection failed. Skip and process the next link - {0}",
    "HttpOtherError": "⚠️ An error has occurred. Skip and process the next link - {0}",
    "UnknownContentsType": "⚠️ Unknown Content Type - {0}/{1}",
    "UnknownComponentType": "⚠️ Unknown component type - {0}",
    "ExtractingEpisodes": "　{0} - Extract episodes from {1} {2} ...",
    "DistinctIDs": "　{0} - Remove duplicate from {1} ...",
    "TopPageRetrievalFailed": "Failed to retrieve top page",
    "SiteMapRetrievalFailed": "Failed to retrieve site map",
    "VideoInfoRetrievalFailed": "⚠️ Failed to retrieve episode information. Skip and process the next link - {0}",
    "M3u8KeyRetrievalFailed": "⚠️ Failed to retrieve m3u8 key. Skip and process the next link - {0}",
    "M3u8FileRetrievalFailed": "⚠️ Failed to retrieve m3u8 file. Skip and process the next link - {0}",
    "JpIPFound": "💡 Japanese IP address assigned - {0}",
    "Bulk Download": "##########################################################################################",
    "BulkDownloading": "Bulk download in progress",
    "ExtractingVideoFromKeywords": "Extract videos from keywords",
    "DownloadingVideo": "Download videos",
    "BulkDownloadCompleted": "Bulk download process has been completed",
    "ExtractAndDownloadVideoFromKeywords": "Extract and download videos from keywords",
    "Individual Download": "##########################################################################################",
    "KeywordForSingleDownload": "Individual Download",
    "SingleDownloadFormTitle": "TVerRec individual download",
    "SingleDownloadCompleted": "Individual download process has been completed",
    "SingleDownloadCUIMessage": "Enter episode URL(s). Press Enter to exit. Multiple entries can be space-separated",
    "SingleDownloadGUIOkButton": "Download",
    "SingleDownloadGUIMessage": "Enter the episode URL. Multiple entries can be separated by line breaks",
    "SingleDownloadTVerURL": "TVer URL",
    "SingleDownloadNonTVerURL": "Non-TVer URL",
    "SingleDownloadNotURL": "Not an URL",
    "List Download": "##########################################################################################",
    "KeywordForListDownload": "List Download",
    "DownloadListZero": "⚠️ There is no items in the download list",
    "ListDownloading": "List download in progress",
    "ExtractAndDownloadVideoFromLists": "Download videos from list file",
    "ListDownloadCompleted": "List download process has been completed",
    "リスト Creation": "##########################################################################################",
    "ListCreation": "Create list from keywords",
    "ExtractAndCreateListFromKeywords": "Extract videos from keywords and update download list",
    "GenerateList": "Create download list",
    "ListCreationCompleted": "Download list creation process has been completed",
    "ListCreationCompletionMessage1": "💡 Please edit download list file to remove videos that does not need to be downloaded as needed",
    "ListCreationCompletionMessage2": "　Path of download list file: {0}",
    "Delete Trash": "##########################################################################################",
    "DeleteTrashFiles": "Deletes junk files created when process is interrupted",
    "DeleteExcludeFiles": "Delete videos match the exclusion list",
    "DisclaimerForForceDownloadFlag": "⚠️ - Skip deletion process for excluded video because the forced download flag is set",
    "DeleteTrashes": "Delete junk files",
    "DeleteEmptyDirs": "Delete empty directories",
    "DeleteTrashesStep1": "　Step 1/3 - Delete junk files when process is interrupted",
    "DeleteTrashesStep2": "　Step 2/3 - Delete excluded videos",
    "DeleteTrashesStep3": "　Step 3/3 - Delete empty directories",
    "DeleteEmptyDirsFailed": "⚠️ - Failed to remove empty directories: {0}",
    "DeleteTrash": "Delete junk",
    "DeleteTrashCompleted": "Delete junk process has been completed",
    "Validate Video": "##########################################################################################",
    "DeleteCorruptedRecords": "Delete corrupted records in the download history",
    "DeleteOldRecords": "Delete out dated download history",
    "CheckingIntegrity": "Check the integrity of the downloaded videos",
    "RemoveDuplicates": "Delete duplicate records in the download history",
    "IntegrityCheck": "Check integrity of unverified files",
    "DisclaimerForNotValidating": "⚠️ Terminate process as the integrity validation is disabled",
    "AllValidated": "✅️ All videos have been verified",
    "ClearValidationStatus": "Change the status of programs that have not been verified from the download history",
    "IntegrityCheckStep1": "　Step 1/5 - Delete corrupted records",
    "IntegrityCheckStep2": "　Step 2/5 - Delete download history older than {0} days",
    "IntegrityCheckStep3": "　Step 3/5 - Delete duplicate records",
    "IntegrityCheckStep4": "　Step 4/5 - Check video integrity",
    "IntegrityCheckStep5": "　Step 5/5 - Change status of unverified files",
    "ValidateVideo": "Download file integrity check in progress",
    "IntegrityCheckCompleted": "Integrity check process has been completed",
    "NotifyFfmpegOptions1": "💡 ffmpeg decode options are set.",
    "NotifyFfmpegOptions2": "💡 If the integrity check does not work, please try either of the following",
    "NotifyFfmpegOptions3": "　- Change decode options in user_setting.ps1",
    "NotifyFfmpegOptions4": "　- Set $script:forceSoftwareDecodeFlag = $true in user_setting.ps1",
    "Move Video": "##########################################################################################",
    "MoveVideos": "Move videos in progress",
    "MoveVideosStep1": "　Step 1/3 - Identify directories",
    "MoveVideosStep2": "　Step 2/3 - Move videos",
    "MoveVideosStep3": "　Step 3/3 - Remove empty directories",
    "ListUpDestinationDirs": "Identify destination directories",
    "ListUpSourceDirs": "Identify source directories",
    "MatchingTargetAndSource": "Identify matches between source and destination directories",
    "MovingVideos": "Move video files",
    "MoveFileFailed": "⚠️ There were files that could not be moved - {0}",
    "MoveFileNotAccessible": "⚠️ Source or destination directories are no longer accessible - {0}",
    "MoveVideo": "Move Videos",
    "MoveVideoCompleted": "Move video process has been completed",
    "GUI Main": "##########################################################################################",
    "ProcessBulkDownload": "Individual download process in progress ...",
    "ProcessSingleDownload": "Bulk download process in progress ...",
    "ProcessListGenerate": "List creation process in progress ...",
    "ProcessListDownload": "List download process in progress ...",
    "ProcessDelete": "Delete trash process in progress ...",
    "ProcessValidate": "Validate video process in progress ...",
    "ProcessMove": "Move video process in progress ...",
    "ProcessLoop": "Loop process in progress ...",
    "SaveDirNotSpecified": "Save directory is not set",
    "ProcessForceStopped": "⚠️ Process has been forced to stop",
    "ProcessCompleted": "💡 Process has been completed",
    "GuiHeaderTool": "Launch Tools",
    "GuiHeaderLink": "Quick Links",
    "GuiHeaderLog": "Execution Log",
    "GuiButtonLoop": "🔃 Loop execution",
    "GuiButtonSingle": "🔽 Individual",
    "GuiButtonBulk": "⏬️ Bulk Download",
    "GuiButtonListGen": "📝 Update List",
    "GuiButtonList": "🎯 List Download",
    "GuiButtonDelete": "🚮 Delete Junk",
    "GuiButtonValidate": "✅ Integrity Check",
    "GuiButtonMove": "🔀 Move Video",
    "GuiButtonKillAll": "❌ Kill Process",
    "GuiButtonWorkOpen": "♻️ Work Directory",
    "GuiButtonDownloadOpen": "📚 Download Directory",
    "GuiButtonSaveOpen": "💾 Save Directory",
    "GuiButtonKeywordOpen": "🔎 Keyword List",
    "GuiButtonIgnoreOpen": "🚫 Exclusion List",
    "GuiButtonListOpen": "📝 Download List",
    "GuiButtonClearLog": "🗑️ Clear Log",
    "GuiButtonWiki": "📒 TVerRec Wiki",
    "GuiButtonSetting": "🛠️ Setting",
    "GuiButtonExit": "Exit",
    "GUI Setting": "##########################################################################################",
    "SettingTrue": "True",
    "SettingFalse": "False",
    "SettingUndefined": "Undefined",
    "SettingDefault": "Default",
    "AutoGenNotDetected": "⚠️ Could not identify the end of the auto generated section",
    "SelectDownloadDir": "Please select a Download directory",
    "SelectWorkDir": "Please select a Work directory",
    "SelectSaveDir": "Please select a Save directory",
    "GuiHeaderBasicSetting": "Basic Settings",
    "GuiHeaderDownloadDir": "Video Download Directory",
    "GuiTextDownloadDirText": "The download directory is the location where the video file will be placed after downloading. \nFor example, if you want to download to `C:\\Users\\yamada-taro\\Video`, you would set it to `C:\\Users\\yamada-taro\\Video.`",
    "GuiHeaderWorkDir": "Download Work Directory",
    "GuiTextWorkDirText": "The work directory is the location where the files that are being processed during the download will be placed. \nFor example, if you want to use `C:\\Temp`, set it to `C:\\Temp`. \nSince many files are created and read/write operations occur frequently, specifying a fast disk such as SSD or ram drive will improve operation speed.",
    "GuiHeaderSaveDir": "Video Save Directory",
    "GuiTextSaveDirText": "The save directory is the location where the libraries for final organization of the video files are located. \nFor example, if you want videos to move to `C:\\TverLibrary`, set it to `C:\\TverLibrary`. \nIf you do not use the video move feature, you do not have to set this option. If you want to specify multiple directories as the destination, you can specify them separated by semicolons like `V:;X:`. However, if multiple directories have the same name, the directory specified first takes precedence.",
    "GuiHeaderAdvancedSetting": "Advanced Settings",
    "GuiTabOperation": "General",
    "GuiHeaderEnableMultithread": "Enable Parallel Processing",
    "GuiTextEnableMultithreadText": "Specify whether to enable parallel processing to speed up downloading. \nHowever, enabling parallel processing will likely increase the risk of corruption of history file and exclusion list. Currently, parallel processing is used for list update, delete junk, and delete empty directories process.",
    "GuiHeaderMultithreadNum": "Number of concurrent threads for parallel processing",
    "GuiTextMultithreadNumText": "Specify the number of threads to be invoked at the same time during parallel processing. \nFor recent PCs, value of `50` or so should be sufficient, but larger number may conversely increase the processing time.",
    "GuiHeaderDisableToast": "Disable Toast Notifications",
    "GuiTextDisableToastText": "Toast notifications can be disabled.",
    "GuiHeaderMaxExecLogLines": "Maximum number of log lines for GUI",
    "GuiTextMaxExecLogLinesText": "You can limit the maximum number of execution log lines in the GUI. \nLarger number increases memory usage and slow down response time. The default setting is 1000 lines; it can be set to `0` to make it unlimited.",
    "GuiHeaderHistRetentionPeriod": "Retention period (days) for history file",
    "GuiTextHistRetentionPeriodText": "Specify the number of days to retain the download history. \nA longer retention period increases the likelihood that you will not have to download duplicate copies of the same episode when it is redistributed, but may increase processing time.",
    "GuiHeaderLoopCycle": "Loop processing interval",
    "GuiTextLoopCycleText": "Specify the execution interval (in seconds) of loop processing.",
    "GuiHeaderDetailedProgress": "Display progress information messages",
    "GuiTextDetailedProgressText": "Specify whether to display progress information in retrieving episodes from keywords. \nIf it is difficult to determine whether the process has stopped or is in progress because of a long processing time, progress information will be shown in more detail.",
    "GuiHeaderExtractDescTextToList": "Output episode detail to download list file",
    "GuiTextExtractDescTextToListText": "Specify whether output episode detail to the download list file.",
    "GuiHeaderListGenHistoryCheck": "Match with history file when creating download lists",
    "GuiTextListGenHistoryCheckText": "Specify whether to exclude episode exists in the download history when creating the download list file. \nIf `True` is selected, the episode will not be output to the list file when there is a record in the download history. \nIf `False` is selected, the episode will be output to the list file even if there is a record in the download history.",
    "GuiHeaderCleanupDownloadBaseDir": "Check download directory when deleting excluded videos",
    "GuiTextCleanupDownloadBaseDirText": "Specify whether the download directory is also checked when deleting exclusion files. \nIf `True` is selected, files in the download directory are also targeted for deletion. \nIf `False` is selected, files in the download directory will not be included in the deletion.",
    "GuiHeaderCleanupSaveBaseDir": "Checks save directories when deleting excluded files",
    "GuiTextCleanupSaveBaseDirText": "Specify whether the save directories are also checked when deleting exclusion files. \nIf `True` is selected, files in the save directory are also targeted for deletion. \nIf `False` is selected, files in the save directory will not be included in the deletion.",
    "GuiHeaderUpdateChannel": "TVerRec update channel",
    "GuiTextUpdateChannelText": "Specify which channel to download the latest version from. \nBy default, `release` is set to download the latest version of the release version. (Pre-releases will be excluded.) \nIf `prerelease` is selected, the latest version of the pre-release version will be downloaded. (Note that it will always be the most recent pre-release board even if the release version is newer.) \nIf `master` is selected, latest version of the master branch will be downloaded. You can get the pre-release features in advance. \nIf `beta` is selected, the latest version of the beta branch will be downloaded. You can try out newer features, but since it is a beta version, it may contain bugs. \nIf `dev` is selected, the latest version of the dev branch will be downloaded. You can try the latest features under development, but it may not be stable and is not recommended unless you have special requirements.",
    "GuiTabMypage": "MyPage",
    "GuiHeaderMyPlatformUID": "Platform UID for My Page processing",
    "GuiTextMyPlatformUIDText": "Specify the platform_uid to download your favorite, watch later and resume to play, etc. registered on My Page without registering your TVerID. \nYou can check the platform_uid using the developer tools in your browser or the Chrome extension `TVerRec Assistant`. See Wiki for more details.",
    "GuiHeaderMyPlatformToken": "Platform Token for My Page processing",
    "GuiTextMyPlatformTokenText": "Specify the platform_token to download your favorite, watch later and resume to play, etc. registered on My Page without registering your TVerID. \nYou can check the platform_token using the developer tools in your browser or the Chrome extension `TVerRec Assistant`. See Wiki for more details.",
    "GuiHeaderMyMemberSID": "Member SID for My Page processing",
    "GuiTextMyMemberSIDText": "Specify member_sid to download your favorite, watch later and resume to play, etc. registered on My Page with TVerID registered using TVerRec. \nYou must specify this to download programs saved on My Page with your registered TVerID. member_sid can be checked using the Developer Tools in your browser or the Chrome extension `TVerRec Assistant`. See Wiki for more details.",
    "GuiTabDownload": "Download",
    "GuiHeaderParallelDownloadFileNum": "Number of files downloaded at the same time ",
    "GuiTextParallelDownloadFileNumText": "Specify the number of programs to be downloaded in parallel at the same time. \nPlease note that this will increase the load on your PC and conversely decrease the efficiency of the download.",
    "GuiHeaderParallelDownloadNumPerFile": "Number of simultaneous downloads per program",
    "GuiTextParallelDownloadNumPerFileText": "Specify the number of concurrent downloads for each program. \nPlease note that this will increase the load on your PC and conversely decrease the efficiency of the download.",
    "GuiHeaderRateLimit": "Maximum download bandwidth",
    "GuiTextRateLimitText": "Specify the maximum download speed (in Mbps) to avoid using up network bandwidth. \nIf you set `0`, no bandwidth limitation will be applied. The setting is bandwidth per file and the unit is Mbps. In other words, if you download 10 files, you will use 10 times the bandwidth. This is only a guideline and may exceed the set value momentarily.",
    "GuiHeaderTimeoutSec": "HTTP access timeout",
    "GuiTextTimeoutSecText": "Timeout value (in seconds) for any HTTP accesses. \nIf there is no HTTP response within the set time, it will be treated as an error.",
    "GuiHeaderEmbedSubtitle": "Embedding subtitle data in video file",
    "GuiTextEmbedSubtitleText": "Specify whether to embed subtitle data in the video file. \nPlease note that there are many programs that do not provide subtitle.",
    "GuiHeaderEmbedMetatag": "Embedding meta tags in video file",
    "GuiTextEmbedMetatagText": "Specify whether to embed meta tags in video files.",
    "GuiHeaderSortVideoBySeries": "Save video files under program season directory",
    "GuiTextSortVideoBySeriesText": "Specify whether to create a directory for each program season to download programs. \nWhen `False` is selected, the destination is as follows \nDownload destination/ \n　└Series Season Date Title.mp4 \nWhen `True` is selected, the destination is as follows \nDownload destination/ \n　└Series Season/ \n　　└Series Season Date Title.mp4 \n*Strictly speaking, the file name will be determined by other options.",
    "GuiHeaderSortVideoByMedia": "Save video files under broadcast station directory",
    "GuiTextSortVideoByMediaText": "Specify whether to create a directory for each broadcast station to download programs. \nWhen `False` is selected, the destination is as follows \nDownload destination/ \n　└Series Season/ \n　　└Series Season Date Title.mp4 \nWhen `True` is selected, the destination is as follows \nDownload destination/ \n　└Broadcast station/ \n　　└Series Season/ \n　　　└Series Season Date Title.mp4 \n*Strictly speaking, the file name will be determined by other options.",
    "GuiHeaderForceSingleDownload": "Forced downloads when individual download",
    "GuiTextForceSingleDownloadText": "Specify whether individual download to force download without matching against the past history or the exclusion list. \nIf this setting is enabled, directories that match the exclusion list will not be deleted during the exclusion file deletion process.",
    "GuiHeaderSitemapParseEpisodeOnly": "Process episodes only when processing sitemap",
    "GuiTextSitemapParseEpisodeOnlyText": "Specify whether or not only episodes are processed when a sitemap is specified in the keyword file. \nCurrently, it seems that all program videos are included even if only episodes are processed, so it seems that it is possible to download all programs even if only episodes are processed. Although the processing time will be longer, the number of programs eligible for downloading may be increased by processing non-episodes as well.",
    "GuiHeaderDownloadWhenEpisodeIdChanged": "Re-download when episode ID is changed",
    "GuiTextDownloadWhenEpisodeIdChangedText": "Specify whether to re-download when the episode ID is changed. \nEpisode ID may be changed even for the same program (programs with the same saved file name). Not sure in which case the episode ID is changed, but it may be that subtitle data is added or the content of the program is changed.",
    "GuiHeaderVideoContainerFormat": "Video container format",
    "GuiTextVideoContainerFormatText": "Specify the video container format for video files. \nThe default value is mp4, and embedding of meta information, subtitles, thumbnails, etc. is only available in mp4 format. \nYou can also specify ts format mainly as a sound shifting measure, but not sure if using ts format will eliminate sound shifting. If you specify the ts format, embedding meta information, subtitles, thumbnails, etc. will not be available. \nBecause of this limitation on the ߋn functionality, specifying mp4 is recommended.",
    "GuiTabVideoFile": "Video File Name",
    "GuiHeaderAddSeriesName": "Append series name to the video file name",
    "GuiTextAddSeriesNameText": "Specify whether to append the series name to the video file name. \nIf `False` is selected, the file name will be `Season BroadcastDate EpisodeNumber Title.mp4` \nIf `True` is selected, the file name will be `Series Season BroadcastDate EpisodeNumber Title.mp4` \n* Please note that the file name is determined by the other options.",
    "GuiHeaderAddSeasonName": "Append season name to the video file name",
    "GuiTextAddSeasonNameText": "Specify whether to append the season name to the video file name. \nIf `False` is selected, the file name will be `Series BroadcastDate EpisodeNumber Title.mp4` \nIf `True` is selected, the file name will be `Series Season BroadcastDate EpisodeNumber Title.mp4` \n* Please note that the file name is determined by the other options.",
    "GuiHeaderAddBroadcastDate": "Append broadcast date to the video file name",
    "GuiTextAddBroadcastDateText": "Specify whether to append the broadcast date to the video file name. \nIf `False` is selected, the file name will be `Series Season EpisodeNumber Title.mp4` \nIf `True` is selected, the file name will be `Series Season BroadcastDate EpisodeNumber Title.mp4` \n* Please note that the file name is determined by the other options.",
    "GuiHeaderAddEpisodeNumber": "Append episode number to the video file name",
    "GuiTextAddEpisodeNumberText": "Specify whether to append the episode number to the video file name. \nIf `False` is selected, the file name will be `Series Season BroadcastDate Title.mp4` \nIf `True` is selected, the file name will be `Series Season BroadcastDate EpisodeNumber Title.mp4` \n* Please note that the file name is determined by the other options.",
    "GuiHeaderRemoveSpecialNote": "Remove unnecessary information that may be included in the episode name",
    "GuiTextRemoveSpecialNoteText": "Specify whether to delete unnecessary information (supplementary information?) included in the episode names, such as《ドラマ特区》, 《新シリーズ放送記念》, 《ドラマ Paravi》, 《〇〇出演 「〇〇」スタート記念》. \nIf `False` is selected, the file name will be set as it is distributed by TVer. \nIf `True` is selected, TVerRec will delete the part between `《` and `》`.",
    "GuiHeaderYtdlNonTVerFileName": "Base name setting for Non-Tver site",
    "GuiTextYtdlNonTVerFileNameText": "Specify a base file name for Non-TVer site. \nBy default, `%(webpage_url_domain)s - %(upload_date)s - %(title)s - [%(id)s].%(ext)s` is set. \nPlease set the options according to the youtube-dl (yt-dlp/ytdl-patched) you are using if you want to change it.",
    "GuiTabYtdlFfmpeg": "youtube-dl/ffmpeg",
    "GuiButtonFfmpegDecodeOptionClear": "Clear",
    "GuiButtonFfmpegDecodeOptionQSV": "Intel QSV",
    "GuiButtonFfmpegDecodeOptionD3D11": "Direct3D 11",
    "GuiButtonFfmpegDecodeOptionD3D9": "Direct3D 9",
    "GuiButtonFfmpegDecodeOptionCuda": "Cuda",
    "GuiButtonFfmpegDecodeOptionVTB": "VideoToolBox",
    "GuiButtonFfmpegDecodeOptionPi4": "Pi4 64bit",
    "GuiButtonFfmpegDecodeOptionPi3": "Pi3 32bit",
    "GuiButtonYtdlOptionClear": "Clear",
    "GuiButtonYtdlOption1080": "1080p or less",
    "GuiButtonYtdlOption720": "720p or less",
    "GuiButtonYtdlOption480": "480p or less",
    "GuiButtonYtdlOption360": "360p or less",
    "GuiHeaderWindowShowStyle": "Window display method for youtube-dl and ffmpeg",
    "GuiTextWindowShowStyleText": "Specify how youtube-dl and ffmpeg windows are displayed. \nIf `Minimized` is selected, the window will be displayed in a minimized state so that you can check the progress only when necessary. \nIf `Hidden` is selected, the window will be hidden. \nIf `Normal` is selected, many windows will be displayed and it is not recommended. \nIf `Maximized` is selected, the window will be displayed in maximized state, but you will not use it in normal use.",
    "GuiHeaderPreferredYoutubedl": "Where to obtain youtube-dl",
    "GuiTextPreferredYoutubedlText": "When problems caused by youtube-dl (e.g. not being able to download) occur, it is possible to use two different youtube-dlp types. \nIf `yt-dlp` is selected, retrieve from yt-dlp (https://github.com/yt-dlp/yt-dlp). \nIf `ytdl-patched` is selected, retrieve from ytdl-patched (https://github.com/ytdl-patched/ytdl-patched).",
    "GuiHeaderFfmpegDecodeOption": "ffmpeg decode option",
    "GuiTextFfmpegDecodeOptionText": "You can directly specify the ffmpeg decode options. \nThis is used, for example, to enable hardware acceleration when verifying video files. For example, on a typical PC with an Intel CPU, setting `-hwaccel qsv -c:v h264_qsv` will use the CPU's built-in accelerator for faster processing while reducing the CPU load. This setting will be discarded if force software decode is enabled.",
    "GuiHeaderForceSoftwareDecodeFlag": "Force software decode",
    "GuiTextForceSoftwareDecodeFlagText": "You can disable the use of hardware acceleration when verifying the video files. \nIf you have a fast CPU, it may be faster to process the file using the CPU than hardware acceleration. Generally, software decoding is faster on Intel Core CPUs from the 10th generation onward, even if they have a GPU; software decoding is also faster on Macs with Apple Silicon.",
    "GuiHeaderSimplifiedValidation": "Simplified video integrity verification",
    "GuiTextSimplifiedValidationText": "Specify whether program verification is simplified or not. \nIf it is enabled, switches to simple verification by ffprobe instead of full verification by ffmpeg. Verification is completed in a few seconds per file, but the accuracy of verification may be low. (Probably only metadata inspection seems to be performed.)",
    "GuiHeaderDisableValidation": "Disable video integrity verification",
    "GuiTextDisableValidationText": "Specify whether or not to disable video file verification.",
    "GuiHeaderDisableUpdateYoutubedl": "Disable automatic updates of youtube-dl",
    "GuiTextDisableUpdateYoutubedlText": "If automatic updates do not work properly due to a problem with the youtube-dl distributor or other reasons, it is possible to disable them.",
    "GuiHeaderDisableUpdateFfmpeg": "Disable automatic updates of ffmpeg",
    "GuiTextDisableUpdateFfmpegText": "If automatic updates do not work properly due to a problem with the ffmpeg distributor, etc., it is possible to disable them.",
    "GuiHeaderYtdlOption": "youtube-dl options",
    "GuiTextYtdlOptionText": "You can directly specify the youtube-dl options. \nThis option is used when you want to specify the resolution of the video. \nFor example, if there is a need to limit videos to 1080p, you can set `-f \"bestvideo[height&lt;=1080]+bestaudio/best[height&lt;=1080]\"` to restrict videos to be retrieved with a height of 1080p or less. Similarly, you can set 720p, 480p, 360p, etc. \nAny other youtube-dl options can also be specified. Please set the options according to the youtube-dl (yt-dlp/ytdl-patched) you are using. \nThe settings you make here will also apply to Non-TVer sites.",
    "GuiHeaderYtdlRandomIp": "Use of random IP address for downloading",
    "GuiTextYtdlRandomIpText": "youtube-dl uses a fixed Japanese IP address by default, but you can use a random Japanese IP address generated by TVerRec when downloading videos. \nThis may reduce the possibility of banning due to IP address. \nThe settings you make here also apply to Non-TVer sites. \nIf `True` is selected, a random IP address generated at each startup will be used. \nIf `False` is selected,, the default function of youtube-dl will be used.",
    "GuiHeaderYtdlHttpHeader": "HTTP Header for youtube-dl",
    "GuiTextYtdlHttpHeaderText": "Additional HTTP headers can be specified for HTTP access by youtube-dl.",
    "GuiHeaderYtdlBaseArgs": "Arguments of youtube-dl for TVer",
    "GuiTextYtdlBaseArgsText": "Download settings from the TVer. TVerRec assumes that the settings listed in system_setting.ps1 are included, so please make changes at your own risk.",
    "GuiHeaderNonTVerYtdlBaseArgs": "Arguments of youtube-dl for Non-TVer site",
    "GuiTextNonTVerYtdlBaseArgsText": "Download settings from Non-TVer sites. TVerRec assumes that the settings listed in system_setting.ps1 are included, so please make changes at your own risk.",
    "GuiTabSchedule": "Schedule",
    "GuiHeaderScheduleStop": "Schedule-based operation stop",
    "GuiTextScheduleStopText": "Specify days and time you wish to stop downloading or other processing during a specific day of the week or time period. \nTVerRec periodically checks whether or not it is time to stop, and pauses the process and waits for the next available schedule. When it is out of the down time, it resumes processing. Due to the way the system works, the stopping and resuming of processing cannot be strictly controlled, so the set time should be used as a rough guide.",
    "GuiTextScheduleSpecifyText": "Check the checkboxes for the days of the week and times you wish to stop the operation.",
    "GuiTextScheduleStopTime": "Time",
    "GuiTextScheduleStopWeek": "Everyday",
    "GuiTextScheduleStopMon": "Mon",
    "GuiTextScheduleStopTue": "Tue",
    "GuiTextScheduleStopWed": "Wed",
    "GuiTextScheduleStopThu": "Thu",
    "GuiTextScheduleStopFri": "Fri",
    "GuiTextScheduleStopSat": "Sat",
    "GuiTextScheduleStopSun": "Sun",
    "GuiTextScheduleStopDay": "All Day",
    "GuiTabLanguage": "Language / 言語",
    "GuiHeaderPreferredLanguageHeader": "Language Setting / TVerRecの言語設定",
    "GuiTextPreferredLanguageText": "TVerRec will automatically switch languages based on the OS language settings, but you can force overwrite language settings if the automatic settings do not work.\nTVerRecはOSの言語設定に基づき自動的に言語を切り替えますが、自動設定がうまくいかない場合は言語設定を強制できます。",
    "GuiButtonCancel": "❌ Cancel",
    "GuiButtonSave": "💾 Save",
    "End": "##########################################################################################"
  }
}
