<Window x:Class="TVerRecSetting.MainWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:local="clr-namespace:TVerRecSetting" mc:Ignorable="d" Title="Setting" Height="640" Width="640" MinHeight="480" MinWidth="640" Background="#f1f1f1"
	WindowStartupLocation="CenterScreen">
	<Window.TaskbarItemInfo>
		<TaskbarItemInfo/>
	</Window.TaskbarItemInfo>
	<Window.Resources>
		<!-- テキストボックス -->
		<SolidColorBrush x:Key="TextBox.Static.Border" Color="#BBBBBB"/>
		<SolidColorBrush x:Key="TextBox.MouseOver.Background" Color="#33D84533"/>
		<SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#BBBBBB"/>
		<SolidColorBrush x:Key="TextBox.Focused.Background" Color="#33D84533"/>
		<SolidColorBrush x:Key="TextBox.Focused.Border" Color="#BBBBBB"/>
		<Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="AllowDrop" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
							<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource TextBox.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsFocused" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focused.Border}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="border" Value="{StaticResource TextBox.Static.Border}"/>
								<Setter Property="Opacity" TargetName="border" Value="0.25"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
						<Condition Property="IsSelectionActive" Value="false"/>
					</MultiTrigger.Conditions>
					<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
				</MultiTrigger>
			</Style.Triggers>
		</Style>
		<!-- コンボボックス -->
		<SolidColorBrush x:Key="ComboBox.Static.Background" Color="#FFFFFF"/>
		<SolidColorBrush x:Key="ComboBox.Static.Border" Color="#BBBBBB"/>
		<SolidColorBrush x:Key="ComboBox.MouseOver.Background" Color="#33D84533"/>
		<SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#BBBBBB"/>
		<SolidColorBrush x:Key="ComboBox.IsChecked.Background" Color="#33D84533"/>
		<SolidColorBrush x:Key="ComboBox.IsChecked.Border" Color="#BBBBBB"/>
		<Style x:Key="ChangingColorComboBoxBorderStyle" TargetType="{x:Type Border}">
			<Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
			<Style.Triggers>
				<DataTrigger Binding="{Binding IsMouseOver, ElementName=Border}" Value="True">
					<Setter Property="Background" Value="{StaticResource ComboBox.MouseOver.Background}"/>
				</DataTrigger>
				<DataTrigger Binding="{Binding IsMouseOver, ElementName=TextBoxBorder}" Value="True">
					<Setter Property="Background" Value="{StaticResource ComboBox.MouseOver.Background}"/>
				</DataTrigger>
				<DataTrigger Binding="{Binding IsChecked, ElementName=ToggleButton}" Value="True">
					<Setter Property="Background" Value="{StaticResource ComboBox.IsChecked.Background}"/>
				</DataTrigger>
				<DataTrigger Binding="{Binding IsChecked, ElementName=ToggleButton}" Value="True">
					<Setter Property="Background" Value="{StaticResource ComboBox.IsChecked.Background}"/>
				</DataTrigger>
			</Style.Triggers>
		</Style>
		<ControlTemplate x:Key="ComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition/>
					<ColumnDefinition Width="20"/>
				</Grid.ColumnDefinitions>
				<Border x:Name="Border" Grid.ColumnSpan="2" BorderThickness="1" Style="{StaticResource ChangingColorComboBoxBorderStyle}"/>
				<Border x:Name="TextBoxBorder" Grid.Column="0" Margin="1" Style="{StaticResource ChangingColorComboBoxBorderStyle}"/>
				<Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" Fill="#393939">
					<!-- ↑ドロップダウンの矢印 -->
				</Path>
			</Grid>
		</ControlTemplate>
		<Style x:Key="ChangingColorComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ComboBoxItem}">
						<Border x:Name="Border" Padding="1" SnapsToDevicePixels="true" Background="#FFFFFF" Height="{Binding Height, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}">
							<!--↑高さのみComboBoxと合わせる-->
							<ContentPresenter VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ComboBoxItem}}}" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ComboBoxItem}}}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Background" TargetName="Border" Value="#FFFFFF"/>
								<Setter Property="Foreground" Value="#393939"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="Border" Value="#33D84533"/>
								<Setter Property="Foreground" Value="#393939"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#FFFFFF"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="MinWidth" Value="120"/>
			<Setter Property="MinHeight" Value="20"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="ItemContainerStyle" Value="{StaticResource ChangingColorComboBoxItemStyle}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ComboBox}">
						<Grid>
							<ToggleButton x:Name="ToggleButton" Template="{StaticResource ComboBoxToggleButtonStyle}" Grid.Column="2" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
							<ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"></ContentPresenter>
							<TextBox x:Name="PART_EditableTextBox" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="3,3,23,3" Focusable="True" Background="#FFFFFF" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}">
								<TextBox.Template>
									<ControlTemplate TargetType="TextBox">
										<Border Name="PART_ContentHost" Focusable="False"/>
									</ControlTemplate>
								</TextBox.Template>
							</TextBox>
							<Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="False" Focusable="False" PopupAnimation="Slide">
								<Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
									<Border x:Name="DropDownBorder" BorderThickness="1">
										<Border.BorderBrush>
											<SolidColorBrush Color="#BBBBBB"/>
										</Border.BorderBrush>
										<Border.Background>
											<SolidColorBrush Color="#FFFFFF"/>
										</Border.Background>
									</Border>
									<ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
									</ScrollViewer>
								</Grid>
							</Popup>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="HasItems" Value="false">
								<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
							</Trigger>
							<Trigger Property="IsGrouping" Value="true">
								<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!-- タブ -->
		<Style x:Key="TabItem" TargetType="{x:Type TabItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Border x:Name="border" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10,10,0,0">
							<ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,5,10,5"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="border" Property="Margin" Value="0,0,0,0" />
								<Setter TargetName="border" Property="Background" Value="#FFFFFF"/>
								<Setter Property="BorderBrush" TargetName="border" Value="#393939"/>
							</Trigger>
							<Trigger Property="IsSelected" Value="False">
								<Setter TargetName="border" Property="Margin" Value="0,0,0,0" />
								<Setter TargetName="border" Property="Background" Value="#CCCCCC"/>
								<Setter Property="BorderBrush" TargetName="border" Value="#393939"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!-- ボタン -->
		<SolidColorBrush x:Key="Button.Static.Background" Color="#BBBBBB"/>
		<SolidColorBrush x:Key="Button.Static.Border" Color="#BBBBBB"/>
		<SolidColorBrush x:Key="Button.Static.Foreground" Color="#393939"/>
		<SolidColorBrush x:Key="Button.MouseOver.Background" Color="#33D84533"/>
		<SolidColorBrush x:Key="Button.MouseOver.Border" Color="#BBBBBB"/>
		<SolidColorBrush x:Key="Button.MouseOver.Foreground" Color="#EEEEEE"/>
		<SolidColorBrush x:Key="Button.Pressed.Background" Color="#BBBBBB"/>
		<SolidColorBrush x:Key="Button.Pressed.Border" Color="#BBBBBB"/>
		<SolidColorBrush x:Key="Button.Pressed.Foreground" Color="#393939"/>
		<SolidColorBrush x:Key="Button.Disabled.Background" Color="#F8F8F8"/>
		<SolidColorBrush x:Key="Button.Disabled.Border" Color="#BBBBBB"/>
		<SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#808080"/>
		<Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="5"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="{StaticResource Button.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>
	
	<Grid Height="Auto" Width="Auto">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="30"/>
			<ColumnDefinition Width="1*"/>
			<ColumnDefinition Width="1*"/>
			<ColumnDefinition Width="30"/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="70"/>
			<RowDefinition Height="20"/>
			<RowDefinition Height="34"/>
			<RowDefinition Height="auto"/>
			<RowDefinition Height="20"/>
			<RowDefinition Height="34"/>
			<RowDefinition/>
			<RowDefinition Height="60"/>
		</Grid.RowDefinitions>
		<!-- ヘッダ -->
		<Border Background="#FFD8453E" Grid.Row="0" Grid.ColumnSpan="4"/>
		<Border Background="#FFD8453E" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
				<Image x:Name="LogoImage" Margin="10,0,0,0" Height="62" Width="173" Source="/TVerRec-Logo-Small.png"/>
			</StackPanel>
		</Border>
		<Border Background="#FFD8453E" Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2">
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
				<Label x:Name="lblVersion" Foreground="#FFFFFF" Margin="0,0,10,0" Content="Version 1.2.3" VerticalAlignment="Center" FontSize="14"/>
			</StackPanel>
		</Border>
		<!-- 基本的な設定 -->
		<Border Background="#EEEEEE" Grid.Row="1" Grid.ColumnSpan="4" Grid.RowSpan="6"/>
		<Border Background="#333333" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2">
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
				<Label x:Name="BasicSetting" Foreground="#FFFFFF" FontSize="14" Margin="10,0,0,0" Content="基本的な設定" FontFamily="Yu Gothic UI Semibold"/>
			</StackPanel>
		</Border>
		<Border Background="#FFFFFF" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2">
			<ScrollViewer VerticalScrollBarVisibility="Auto">
				<StackPanel Margin="0,10,0,10">
					<Expander Margin="10,0,10,0" Header="ダウンロード先ディレクトリ">
						<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
							ダウンロード先とは、ダウンロードが終わった動画ファイルが配置される場所です。 <LineBreak/>
							例えば C:\Users\yamada-taro\Video にダウンロードするのであれば C:\Users\yamada-taro\Video と設定します。
						</TextBlock>
					</Expander>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition Width="auto"/>
						</Grid.ColumnDefinitions>
						<TextBox x:Name="downloadBaseDir" Text="未設定" Style="{DynamicResource TextBoxStyle}" Margin="20,0,0,0" VerticalScrollBarVisibility="Auto" BorderThickness="0,0,0,1"/>
						<Button x:Name="btndownloadBaseDir" Style="{DynamicResource ButtonStyle}" Content="..." Margin="0,0,20,0" HorizontalAlignment="Right" Grid.Column="2" Grid.Row="7" VerticalAlignment="Center" Width="30"/>
					</Grid>
					<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="作業ディレクトリ">
						<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
							作業ディレクトリは、動画のダウンロード中に処理途中のファイルが配置される場所です。 <LineBreak/>
							例えば C:\Temp にダウンロードするのであれば C:\Temp と設定します。 <LineBreak/>
							多数のファイルが作成され読み書きが多発するので、SSDやRamDriveなどの高速なディスクを指定すると動作速度が向上します。
						</TextBlock>
					</Expander>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition Width="auto"/>
						</Grid.ColumnDefinitions>
						<TextBox x:Name="downloadWorkDir" Text="未設定" Style="{DynamicResource TextBoxStyle}" Margin="20,0,20,0" VerticalScrollBarVisibility="Auto" BorderThickness="0,0,0,1"/>
						<Button x:Name="btndownloadWorkDir" Style="{DynamicResource ButtonStyle}" Content="..." Margin="0,0,20,0" HorizontalAlignment="Right" Grid.Column="2" Grid.Row="7" VerticalAlignment="Center" Width="30"/>
					</Grid>
					<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="移動先ディレクトリ">
						<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
							移動先とは、動画ファイルを最終的に整理するためのライブラリ等が配置されている場所です。 <LineBreak/>
							例えば C:\TverLibrary を移動先にするのであれば C:\TverLibrary と設定します。 <LineBreak/>
							番組移動機能使用しない場合は設定しなくてもOKです。
							複数のディレクトリを移動先として指定する場合には V:;X: のようにセミコロン区切りで複数指定可能です。
							ただし、複数のディレクトリに同名のディレクトリがある場合には、先に指定したディレクトリが優先されます。
						</TextBlock>
					</Expander>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition Width="auto"/>
						</Grid.ColumnDefinitions>
						<TextBox x:Name="saveBaseDir" Text="未設定" Style="{DynamicResource TextBoxStyle}" Margin="20,0,20,0" VerticalScrollBarVisibility="Auto" BorderThickness="0,0,0,1"/>
						<Button x:Name="btnsaveBaseDir" Style="{DynamicResource ButtonStyle}" Content="..." Margin="0,0,20,0" HorizontalAlignment="Right" Grid.Column="2" Grid.Row="7" VerticalAlignment="Center" Width="30"/>
					</Grid>
				</StackPanel>
			</ScrollViewer>
		</Border>
		<Border Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2"></Border>
		<!-- 高度な設定 -->
		<Border Background="#333333" Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2">
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
				<Label x:Name="AdvancedSetting" Foreground="#FFFFFF" FontSize="14" Margin="10,0,0,0" Content="高度な設定" FontFamily="Yu Gothic UI Semibold"/>
			</StackPanel>
		</Border>
		<Border Background="#FFFFFF" Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="2">
			<TabControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Name="TabControl1" Background="#FFFFFF" TabStripPlacement="Top" BorderThickness="0,1,0,1" Margin="10,5,10,10">
				<!-- 動作設定タブ -->
				<TabItem Header="動作設定" Name="TabItem1" Style="{StaticResource TabItem}" IsSelected="True">
					<ScrollViewer>
						<StackPanel>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="並列処理の有効化">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									並列処理を有効化して処理を高速化するかを設定します。 <LineBreak/>
									ただし、並列処理を有効化すると履歴ファイルやダウンロード対象外リストの破損リスクが高まる可能性が高くなります。
									現在のところ、並列処理を行うのはダウンロードリストの作成処理とダウンロード対象外番組の削除処理、空ディレクトリの削除処理です。
								</TextBlock>
							</Expander>
							<ComboBox x:Name="enableMultithread" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>しない</ComboBoxItem>
								<ComboBoxItem>する</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="並列処理の同時スレッド数">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									並列処理の際に同時に起動するスレッド数を指定します。 <LineBreak/>
									最近のPCであれば50くらいの値を設定しても十分に動作すると思いますが、あまり大きな数を指定すると逆に処理時間が長くなる可能性があります。
								</TextBlock>
							</Expander>
							<TextBox x:Name="multithreadNum" Text="デフォルト値" Style="{DynamicResource TextBoxStyle}" Margin="20,0,20,0" VerticalScrollBarVisibility="Auto" BorderThickness="0,0,0,1"/>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="トースト通知の無効化">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									トースト通知を無効化することが可能です。。
								</TextBlock>
							</Expander>
							<ComboBox x:Name="disableToastNotification" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>しない</ComboBoxItem>
								<ComboBoxItem>する</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="GUI版の最大ログ行数">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									GUI版で実行ログの最大行数を制限することができます。 <LineBreak/>
									実行ログの行数が増えてくるとメモリ使用量の増大やレスポンスが低下する可能性が高いです。
									規定の設定では1000行に設定されています。0に設定することで無制限とすることができます。
								</TextBlock>
							</Expander>
							<TextBox x:Name="guiMaxExecLogLines" Text="デフォルト値" Style="{DynamicResource TextBoxStyle}" Margin="20,0,20,0" VerticalScrollBarVisibility="Auto" BorderThickness="0,0,0,1"/>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="ダウンロード履歴保持日数">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									ダウンロード履歴を保持する日数を指定します。 <LineBreak/>
									保持期間を長くすると、同じ番組の再配信があった際に重複ダウンロードしなくて住む可能性が高くなりますが、処理時間が長くなる可能性があります。
								</TextBlock>
							</Expander>
							<TextBox x:Name="histRetentionPeriod" Text="デフォルト値" Style="{DynamicResource TextBoxStyle}" Margin="20,0,20,0" VerticalScrollBarVisibility="Auto" BorderThickness="0,0,0,1"/>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="youtube-dlとffmpegのウィンドウの表示方法">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									youtube-dl と ffmpeg のウィンドウをどのように表示するかを設定します。 <LineBreak/>
									Minimizedに設定することで最小化状態でウィンドウが作成されるようになり必要なときにだけ進捗確認をすることができます。 <LineBreak/>
									Hiddenに設定すると非表示となります。 <LineBreak/>
									Normalに設定すると多数のウィンドウが表示され鬱陶しいのでおすすめしません。 <LineBreak/>
									Maximizedに設定すると最大化した状態でウィンドウが表示されますが、通常利用では利用することはないと思います。
								</TextBlock>
							</Expander>
							<ComboBox x:Name="windowShowStyle" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>Minimized</ComboBoxItem>
								<ComboBoxItem>Hidden</ComboBoxItem>
								<ComboBoxItem>Normal</ComboBoxItem>
								<ComboBoxItem>Maximized</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="サイトマップ処理時にエピソードのみ処理">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									キーワードファイルでサイトマップ指定をした際にエピソードのみを処理するかどうかを設定します。 <LineBreak/>
									現在のところ、エピソードだけの処理でもすべての番組動画が含まれているようなので、エピソードだけの処理でも全番組のダウンロードが可能なようです。
									処理時間が長くなりますが、エピソード以外も処理することでダウンロード対象番組が増える可能性があります。
								</TextBlock>
							</Expander>
							<ComboBox x:Name="sitemapParseEpisodeOnly" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>しない</ComboBoxItem>
								<ComboBoxItem>する</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="ダウンロードリストファイルへの番組説明の出力">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									ダウンロードリストファイルに番組説明情報を出力するかを設定します。
							</TextBlock>
							</Expander>
							<ComboBox x:Name="extractDescTextToList" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>しない</ComboBoxItem>
								<ComboBoxItem>する</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="ダウンロードリスト作成時のダウンロード履歴との突合">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									ダウンロードリストファイル作成時にダウンロード履歴に含まれる番組を除外するかを設定します。 <LineBreak/>
									「する」の場合ははダウンロード履歴に番組履歴がある際はリストファイルに出力しません。 <LineBreak/>
									「しない」の場合はダウンロード履歴に番組履歴があってもリストファイルに出力します。
								</TextBlock>
							</Expander>
							<ComboBox x:Name="listGenHistoryCheck" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>しない</ComboBoxItem>
								<ComboBoxItem>する</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="TVerRecのアップデートチャネル">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									TVerRecのアップデータを実行した際に、どのチャネルから最新版をダウンロードするのかを設定します。 <LineBreak/>
									規定では release が設定されており、リリース版の最新版をダウンロードします。(プレリリースは除きます) <LineBreak/>
									prerelease に設定すると、プレリリース版の最新版をダウンロードします。(リリース版のほうが新しくても常に一番新しいプレリリース板となるのでご注意ください) <LineBreak/>
									master に設定すると、masterブランチの最新版を取得します。リリース前の機能を先行取得できます。 <LineBreak/>
									beta に設定すると、betaブランチの最新版を取得します。より新しい機能をお試しいただけますが、ベータ版のため不具合を含んでいる可能性があります。 <LineBreak/>
									dev に設定すると、devブランチの最新版を取得します。開発中の最新機能をお試しいただけますが、安定動作しない可能性があるため特殊要件がなければおすすめしません。
								</TextBlock>
							</Expander>
							<ComboBox x:Name="updateChannel" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>release</ComboBoxItem>
								<ComboBoxItem>prerelease</ComboBoxItem>
								<ComboBoxItem>master</ComboBoxItem>
								<ComboBoxItem>beta</ComboBoxItem>
								<ComboBoxItem>dev</ComboBoxItem>
							</ComboBox>
						</StackPanel>
					</ScrollViewer>
				</TabItem>
				<!-- ダウンロード設定設定タブ -->
				<TabItem Header="ダウンロード設定" Name="TabItem2" Style="{StaticResource TabItem}">
					<ScrollViewer VerticalScrollBarVisibility="Auto">
						<StackPanel Background="#FFFFFF">
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="同時ダウンロードファイル数">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									同時に並行でダウンロードする番組の数を設定します。 <LineBreak/>
									ここの数字を増やすことで同時ダウンロード数を増やすことはできますが、PCへの負荷が高まり逆にダウンロード効率が下がるのでご注意ください。
								</TextBlock>
							</Expander>
							<TextBox x:Name="parallelDownloadFileNum" Text="デフォルト値" Style="{DynamicResource TextBoxStyle}" Margin="20,0,20,0" VerticalScrollBarVisibility="Auto" BorderThickness="0,0,0,1"/>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="番組あたりの同時ダウンロード数">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									それぞれの番組をダウンロードする際の並行ダウンロード数を設定します。 <LineBreak/>
									ここの数字を増やすことで同時ダウンロード数を増やすことはできますが、PCへの負荷が高まり逆にダウンロード効率が下がるのでご注意ください。
								</TextBlock>
							</Expander>
							<TextBox x:Name="parallelDownloadNumPerFile" Text="デフォルト値" Style="{DynamicResource TextBoxStyle}" Margin="20,0,20,0" VerticalScrollBarVisibility="Auto" BorderThickness="0,0,0,1"/>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="ループ処理の間隔(秒)">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									ループ処理の実行間隔を指定します。
								</TextBlock>
							</Expander>
							<TextBox x:Name="loopCycle" Text="デフォルト値" Style="{DynamicResource TextBoxStyle}" Margin="20,0,20,0" VerticalScrollBarVisibility="Auto" BorderThickness="0,0,0,1"/>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="マイページ処理用のUID">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									マイページに登録したお気に入りやあとでみる、続きから再生などをTVerRecでダウンロードするためのplatfprm_uidを指定します。 <LineBreak/>
									これを指定しないとマイページ配下の番組はダウンロードできません。
									platform_uidはブラウザの開発者ツール、またはChrome拡張機能TVerRec Assistantを使って確認できます。
									詳細はWikiを参照してください。
								</TextBlock>
							</Expander>
							<TextBox x:Name="myPlatformUID" Text="デフォルト値" Style="{DynamicResource TextBoxStyle}" Margin="20,0,20,0" VerticalScrollBarVisibility="Auto" BorderThickness="0,0,0,1"/>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="マイページ処理用のToken">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									マイページに登録したお気に入りやあとでみる、続きから再生などをTVerRecでダウンロードするためのplatform_tokenを指定します。 <LineBreak/>
									これを指定しないとマイページ配下の番組はダウンロードできません。
									platform_tokenはブラウザの開発者ツール、またはChrome拡張機能TVerRec Assistantを使って確認できます。
									詳細はWikiを参照してください。
								</TextBlock>
							</Expander>
							<TextBox x:Name="myPlatformToken" Text="デフォルト値" Style="{DynamicResource TextBoxStyle}" Margin="20,0,20,0" VerticalScrollBarVisibility="Auto" BorderThickness="0,0,0,1"/>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="ダウンロード帯域制限(Mbps)">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									ネットワーク帯域を使い切らないようにダウンロード速度制限を設定することができます。 <LineBreak/>
									0を設定すると帯域制限を行いません。
									設定は 1 ファイルあたりの帯域となっており単位は Mbps です。つまり、10ファイルダウンロードすれば10倍の帯域を使います。
									あくまでも目安となっており、瞬間的には設定値を超えることがあります。
								</TextBlock>
							</Expander>
							<TextBox x:Name="rateLimit" Text="デフォルト値" Style="{DynamicResource TextBoxStyle}" Margin="20,0,20,0" VerticalScrollBarVisibility="Auto" BorderThickness="0,0,0,1"/>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="HTTPアクセスのタイムアウト(秒)">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									各種 HTTP のアクセス時のタイムアウト値(秒)です。 <LineBreak/>
									設定した時間以内に HTTP の応答がなければエラーとして判断されます。
								</TextBlock>
							</Expander>
							<TextBox x:Name="timeoutSec" Text="デフォルト値" Style="{DynamicResource TextBoxStyle}" Margin="20,0,20,0" VerticalScrollBarVisibility="Auto" BorderThickness="0,0,0,1"/>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="番組ファイルへの字幕データの埋め込み">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									ダウンロードしたファイルに字幕データを埋め込むかを設定します。 <LineBreak/>
									字幕データが提供されていない番組も多くありますのでご注意ください。
								</TextBlock>
							</Expander>
							<ComboBox x:Name="embedSubtitle" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>しない</ComboBoxItem>
								<ComboBoxItem>する</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="番組ファイルへのメタタグの埋め込み">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									ダウンロードしたファイルにメタタグを埋め込むかを設定します。
								</TextBlock>
							</Expander>
							<ComboBox x:Name="embedMetatag" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>しない</ComboBoxItem>
								<ComboBoxItem>する</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="放送局毎のディレクトリ配下にダウンロードファイルを保存">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									放送局(テレビ局)ごとのディレクトリを作って番組をダウンロードするかを設定します。 <LineBreak/>
									「しない」の際の移動先は以下 <LineBreak/>
									　ダウンロード先/ <LineBreak/>
									　　└番組シリーズ名 番組シーズン名/ <LineBreak/>
									　　　└番組シリーズ名 番組シーズン名 放送日 番組タイトル名.mp4 <LineBreak/>
									「する」の際の移動先は以下 <LineBreak/>
									　ダウンロード先/ <LineBreak/>
									　　└放送局/ <LineBreak/>
									　　　└番組シリーズ名 番組シーズン名/ <LineBreak/>
									　　　　└番組シリーズ名 番組シーズン名 放送日 番組タイトル名.mp4 <LineBreak/>
									※厳密にはファイル名は他のオプションによって決定されます
								</TextBlock>
							</Expander>
							<ComboBox x:Name="sortVideoByMedia" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>しない</ComboBoxItem>
								<ComboBoxItem>する</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="個別ダウンロード時の強制ダウンロード">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									個別ダウンロードの際に過去履歴やダウンロード対象外リストとの照合をせずに強制ダウンロードするかを設定します。 <LineBreak/>
									この設定を有効にすると、不要ファイル削除処理時にダウンロード対象外リストとマッチするディレクトリの削除を行わなくなります。
								</TextBlock>
							</Expander>
							<ComboBox x:Name="forceSingleDownload" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>しない</ComboBoxItem>
								<ComboBoxItem>する</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="番組ファイルの動画コンテナ形式">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									番組ファイルの動画コンテナ形式を設定します。 <LineBreak/>
									デフォルトでは mp4 となっており、メタ情報や字幕、サムネイルなどの埋込はmp4形式のみで有効です。 <LineBreak/>
									主に音ズレ対策として ts形式を指定することもできますが、ts形式を使うことで音ズレがなくなるかどうかはよくわかりません。 <LineBreak/>
									ts 形式を指定した場合、メタ情報や字幕、サムネイルなどの埋め込みは利用できなくなります。 <LineBreak/>
									機能に制限が出るため、基本的には mp4 を指定することが推奨で、特段理由がなければ ts を指定しない方が良いと思います。
								</TextBlock>
							</Expander>
							<ComboBox x:Name="videoContainerFormat" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>mp4</ComboBoxItem>
								<ComboBoxItem>ts</ComboBoxItem>
							</ComboBox>
						</StackPanel>
					</ScrollViewer>
				</TabItem>
				<!-- 動画ファイル名設定タブ -->
				<TabItem Header="動画ファイル名設定" Name="TabItem3" Style="{StaticResource TabItem}">
					<ScrollViewer>
						<StackPanel>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="ダウンロードファイル名に番組シリーズ名を付加">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									ダウンロードファイル名に番組シリーズ名を付加するかを設定します。 <LineBreak/>
									「しない」の場合のファイル名は以下 <LineBreak/>
									　番組シーズン名 放送日 Epエピソード番号 番組タイトル名.mp4 <LineBreak/>
									「する」の際のファイル名は以下 <LineBreak/>
									　番組シリーズ名 番組シーズン名 放送日 Epエピソード番号 番組タイトル名.mp4 <LineBreak/>
									※厳密にはファイル名は他のオプションによって決定されます
								</TextBlock>
							</Expander>
							<ComboBox x:Name="addSeriesName" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>しない</ComboBoxItem>
								<ComboBoxItem>する</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="ダウンロードファイル名に番組シーズン名を付加">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									ダウンロードファイル名に番組シーズン名を付加するかを設定します。 <LineBreak/>
									「しない」の場合のファイル名は以下 <LineBreak/>
									　番組シリーズ名 放送日 Epエピソード番号 番組タイトル名.mp4 <LineBreak/>
									「する」の際のファイル名は以下 <LineBreak/>
									　番組シリーズ名 番組シーズン名 放送日 Epエピソード番号 番組タイトル名.mp4 <LineBreak/>
									※厳密にはファイル名は他のオプションによって決定されます
								</TextBlock>
							</Expander>
							<ComboBox x:Name="addSeasonName" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>しない</ComboBoxItem>
								<ComboBoxItem>する</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="ダウンロードファイル名に番組放送日を付加">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									ダウンロードファイル名に番組放送日を付加するかを設定します。 <LineBreak/>
									「しない」の場合のファイル名は以下 <LineBreak/>
									　番組シリーズ名 番組シーズン名 Epエピソード番号 番組タイトル名.mp4 <LineBreak/>
									「する」の際のファイル名は以下 <LineBreak/>
									　番組シリーズ名 番組シーズン名 放送日 Epエピソード番号 番組タイトル名.mp4 <LineBreak/>
									※厳密にはファイル名は他のオプションによって決定されます
								</TextBlock>
							</Expander>
							<ComboBox x:Name="addBrodcastDate" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>しない</ComboBoxItem>
								<ComboBoxItem>する</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="ダウンロードファイル名にエピソード番号を付加">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									ダウンロードファイル名にエピソード番号を付加するかを設定します。 <LineBreak/>
									ただし、番組によってはエピソード番号が固定になっている番組やエピソード番号が取得できない番組もありますのでご注意ください。 <LineBreak/>
									「しない」の場合のファイル名は以下 <LineBreak/>
									　番組シリーズ名 番組シーズン名 放送日 番組タイトル名.mp4 <LineBreak/>
									「する」の際のファイル名は以下 <LineBreak/>
									　番組シリーズ名 番組シーズン名 放送日 Epエピソード番号 番組タイトル名.mp4 <LineBreak/>
									※厳密にはファイル名は他のオプションによって決定されます
								</TextBlock>
							</Expander>
							<ComboBox x:Name="addEpisodeNumber" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>しない</ComboBoxItem>
								<ComboBoxItem>する</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="番組名に付くことがある不要なコメントを削除">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									番組名に付く《ドラマ特区》、《新シリーズ放送記念》、《ドラマ Paravi》、《〇〇出演 「〇〇」スタート記念》などの不要なコメント(補足情報?)を削除するかを設定します。 <LineBreak/>
									「しない」の場合はTVerで配信されているとおりに番組名を設定 <LineBreak/>
									「する」の場合は「《」と「》」で挟まれた部分を削除
								</TextBlock>
							</Expander>
							<ComboBox x:Name="removeSpecialNote" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>しない</ComboBoxItem>
								<ComboBoxItem>する</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="Tverサイト以外のベース名設定">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									Tverサイト以外のベースファイル名を指定します。 <LineBreak/>
									規定では %(webpage_url_domain)s - %(upload_date)s - %(title)s - [%(id)s].%(ext)s が設定されています。 <LineBreak/>
									変更する場合は使用しているyoutube-dl(yt-dlp/ytdl-patched)に合わせてオプションを設定してください。
							</TextBlock>
							</Expander>
							<TextBox x:Name="ytdlNonTVerFileName" Text="デフォルト値" Style="{DynamicResource TextBoxStyle}" Margin="20,0,20,0" VerticalScrollBarVisibility="Auto" BorderThickness="0,0,0,1"/>
						</StackPanel>
					</ScrollViewer>
				</TabItem>
				<!-- youtube-dl/ffmpeg設定タブ -->
				<TabItem Header="youtube-dl/ffmpeg設定" Name="TabItem4" Style="{StaticResource TabItem}">
					<ScrollViewer>
						<StackPanel>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="youtube-dlの取得元">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									youtube-dlに起因する問題(例えばダウンロードできないなど)が起きた際には2種類のyoutube-dlを使い分けることが可能です。 <LineBreak/>
									yt-dlpを設定するとyt-dlp(https://github.com/yt-dlp/yt-dlp)から取得します。 <LineBreak/>
									ytdl-patchedを設定するとytdl-patched(https://github.com/ytdl-patched/ytdl-patched)から取得します。
								</TextBlock>
							</Expander>
							<ComboBox x:Name="preferredYoutubedl" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>yt-dlp</ComboBoxItem>
								<ComboBoxItem>ytdl-patched</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="ffmpegのデコードオプション">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									直接ffmpegのオプションを記載することができます。 <LineBreak/>
									ダウンロードファイルの整合性検証時にハードウェアアクセラレーションを有効化する際などに使用します。
									例えばIntel CPUを搭載した一般的なPCであれば、-hwaccel qsv -c:v h264_qsvを設定することで、CPU内蔵のアクセラレータを使ってCPU負荷を下げつつ高速に処理することが可能です。
									この設定はソフトウェアデコードの強制を有効に設定されていると無効化されます。
								</TextBlock>
							</Expander>
							<TextBox x:Name="ffmpegDecodeOption" Text="未設定" Style="{DynamicResource TextBoxStyle}" Margin="20,0,20,0" VerticalScrollBarVisibility="Auto" BorderThickness="0,0,0,1"/>
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="10,5,10,5">
								<Button x:Name="ffmpegDecodeOption_Clear" Style="{DynamicResource ButtonStyle}" Content="クリア" Width="50" Margin="15,0,15,0"/>
								<Button x:Name="ffmpegDecodeOption_Qsv" Style="{DynamicResource ButtonStyle}" Content="Intel QSV" Width="90" Margin="5,0,5,0"/>
								<Button x:Name="ffmpegDecodeOption_D3d11" Style="{DynamicResource ButtonStyle}" Content="Direct3D 11" Width="90" Margin="5,0,5,0"/>
								<Button x:Name="ffmpegDecodeOption_D3d9" Style="{DynamicResource ButtonStyle}" Content="Direct3D 9" Width="90" Margin="5,0,5,0"/>
								<Button x:Name="ffmpegDecodeOption_Cuda" Style="{DynamicResource ButtonStyle}" Content="Cuda" Width="90" Margin="5,0,5,0"/>
							</StackPanel>
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="10,0,10,5">
								<Button x:Name="ffmpegDecodeOption_Vtb" Style="{DynamicResource ButtonStyle}" Content="VideoToolbox" Width="90" Margin="85,0,5,0"/>
								<Button x:Name="ffmpegDecodeOption_Pi4" Style="{DynamicResource ButtonStyle}" Content="Pi4 64bit" Width="90" Margin="5,0,5,0"/>
								<Button x:Name="ffmpegDecodeOption_Pi3" Style="{DynamicResource ButtonStyle}" Content="Pi3 32bit" Width="90" Margin="5,0,5,0"/>
							</StackPanel>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="ソフトウェアデコードの強制">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									ダウンロードファイルの整合性検証時にハードウェアアクセラレーションを使わなくすることができます。 <LineBreak/>
									高速なCPUが搭載されている場合はハードウェアアクセラレーションよりもCPUで処理したほうが処理が早いことがあります。
									概ね10世代以降のIntel Core CPUであれば、GPUを搭載していてもソフトウェアデコードの方が高速です。
									Apple Silicon搭載のMacでもソフトウェアデコードのほうが高速です。
								</TextBlock>
							</Expander>
							<ComboBox x:Name="forceSoftwareDecodeFlag" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>しない</ComboBoxItem>
								<ComboBoxItem>する</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="番組の整合性検証の高速化">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									番組検証を簡素化するかどうかを設定します。 <LineBreak/>
									簡素化した場合、ffmpegによる番組の完全検証ではなく、ffprobeによる簡易検証に切り替えます。
									番組1本あたり数秒で検証が完了しますが、検証精度は低いです。(おそらくメタデータの検査だけの模様)
								</TextBlock>
							</Expander>
							<ComboBox x:Name="simplifiedValidation" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>しない</ComboBoxItem>
								<ComboBoxItem>する</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="番組の整合性検証の無効化">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									番組検証を行わなくするかどうかを設定します。
								</TextBlock>
							</Expander>
							<ComboBox x:Name="disableValidation" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>しない</ComboBoxItem>
								<ComboBoxItem>する</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="youtube-dlの自動アップデートを無効化">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									youtube-dlの配布元の不具合等により自動アップデートがうまく動作しない場合には無効化することが可能です。
								</TextBlock>
							</Expander>
							<ComboBox x:Name="disableUpdateYoutubedl" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>しない</ComboBoxItem>
								<ComboBoxItem>する</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="ffmpegの自動アップデートを無効化">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									ffmpegの配布元の不具合等により自動アップデートがうまく動作しない場合には無効化することが可能です。
								</TextBlock>
							</Expander>
							<ComboBox x:Name="disableUpdateFfmpeg" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle}" Margin="20,0,20,0" Width="100" HorizontalAlignment="Left">
								<ComboBoxItem>デフォルト値</ComboBoxItem>
								<ComboBoxItem>しない</ComboBoxItem>
								<ComboBoxItem>する</ComboBoxItem>
							</ComboBox>
							<Expander Margin="10,10,10,0" IsExpanded="False" FontFamily="Yu Gothic UI" Header="youtube-dlオプション">
								<TextBlock Margin="20,0,20,5" TextWrapping="Wrap">
									直接youtube-dlのオプションを記載することができます。 <LineBreak/>
									動画の解像度を指定する場合などに使用します。 <LineBreak/>
									例えば、1080pを上限としたい場合、-f bestvideo[height&lt;=1080]+bestaudio/best[height&lt;=1080] と設定することで、高さが1080以下の動画を取得するように制限することが可能です。同様に、720pや480p、360pなども設定できます。 <LineBreak/>
									その他のyoutube-dlのオプションも設定可能です。使用しているyoutube-dl(yt-dlp/ytdl-patched)に合わせてオプションを設定してください。
								</TextBlock>
							</Expander>
							<TextBox x:Name="ytdlOption" Text="未設定" Style="{DynamicResource TextBoxStyle}" Margin="20,0,20,0" VerticalScrollBarVisibility="Auto" BorderThickness="0,0,0,1"/>
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="10,5,10,5">
								<Button x:Name="btnYtdlOption_Clear" Style="{DynamicResource ButtonStyle}" Content="クリア" Width="50" Margin="15,0,15,0"/>
								<Button x:Name="btnYtdlOption_1080" Style="{DynamicResource ButtonStyle}" Content="1080p以下" Width="90" Margin="5,0,5,0"/>
								<Button x:Name="btnYtdlOption_720" Style="{DynamicResource ButtonStyle}" Content="720p以下" Width="90" Margin="5,0,5,0"/>
								<Button x:Name="btnYtdlOption_480" Style="{DynamicResource ButtonStyle}" Content="480p以下" Width="90" Margin="5,0,5,0"/>
								<Button x:Name="btnYtdlOption_360" Style="{DynamicResource ButtonStyle}" Content="360p以下" Width="90" Margin="5,0,5,0"/>
							</StackPanel>
						</StackPanel>
					</ScrollViewer>
				</TabItem>
			</TabControl>
		</Border>
		<!-- ボタンエリア -->
		<Button x:Name="btnWiki" Style="{DynamicResource ButtonStyle}" Content="📒 TVerRec Wiki" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="7" VerticalAlignment="Center" Width="100"/>
		<Button x:Name="btnCancel" Style="{DynamicResource ButtonStyle}" Content="❌ キャンセル" HorizontalAlignment="Left" Grid.Column="2" Grid.Row="7" VerticalAlignment="Center" Width="100"/>
		<Button x:Name="btnSave" Style="{DynamicResource ButtonStyle}" Content="💾 保存" HorizontalAlignment="Right" Grid.Column="2" Grid.Row="7" VerticalAlignment="Center" Width="100"/>
	</Grid>
</Window>
